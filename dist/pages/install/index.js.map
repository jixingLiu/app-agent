{"version":3,"file":"pages/install/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;AACA;AAGA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AAEA;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA","sources":["webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_SearchBar_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_VirtualList_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_searchbar.taro-7daf43fc.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_virtuallist.taro-c75a4e71.js","webpack://taro-react-tailwind-vscode-template/._src_pages_install_index.tsx","webpack://taro-react-tailwind-vscode-template/./src/pages/install/index.tsx?8c11","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_SearchBar_style_style.css","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_VirtualList_style_style.css"],"sourcesContent":["import './style.css'","import './style.css'","import React__default, { useRef, useState, useEffect } from \"react\";\nimport { Search, CircleClose } from \"@nutui/icons-react-taro\";\nimport { u as useConfig } from \"./configprovider.taro-c5ff4877.js\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nconst defaultProps = {\n  ...ComponentDefaults,\n  placeholder: \"\",\n  shape: \"square\",\n  disabled: false,\n  maxLength: 9999,\n  clearable: true,\n  readOnly: false,\n  autoFocus: false,\n  left: \"\",\n  right: \"\",\n  rightIn: \"\",\n  leftIn: React__default.createElement(Search, { size: \"12\" })\n};\nconst SearchBar = (props) => {\n  const classPrefix = \"nut-searchbar\";\n  const { locale } = useConfig();\n  const searchRef = useRef(null);\n  const [value, setValue] = useState(() => props.value);\n  const { placeholder, shape, className, disabled, maxLength, clearable, readOnly, autoFocus, right, left, leftIn, rightIn, onChange, onFocus, onBlur, onClear, onSearch, onInputClick } = {\n    ...defaultProps,\n    ...props\n  };\n  const forceFocus = () => {\n    const searchSelf = searchRef.current;\n    searchSelf && searchSelf.focus();\n  };\n  const change = (event) => {\n    const { value: value2 } = event.target;\n    onChange && (onChange == null ? void 0 : onChange(value2, event));\n    setValue(value2);\n    value2 === \"\" && forceFocus();\n  };\n  const focus = (event) => {\n    const { value: value2 } = event.target;\n    onFocus && (onFocus == null ? void 0 : onFocus(value2, event));\n  };\n  const blur = (event) => {\n    const searchSelf = searchRef.current;\n    searchSelf && searchSelf.blur();\n    const { value: value2 } = event.target;\n    onBlur && (onBlur == null ? void 0 : onBlur(value2, event));\n  };\n  useEffect(() => {\n    setValue(props.value);\n  }, [props.value]);\n  useEffect(() => {\n    autoFocus && forceFocus();\n  }, [autoFocus]);\n  const renderField = () => {\n    return React__default.createElement(\"input\", { className: `${classPrefix}__input ${clearable ? `${classPrefix}__input-clear` : \"\"}`, ref: searchRef, style: { ...props.style }, value: value || \"\", placeholder: placeholder || locale.placeholder, disabled, readOnly, maxLength, onKeyPress: onKeypress, onChange: (e) => change(e), onFocus: (e) => focus(e), onBlur: (e) => blur(e), onClick: (e) => clickInput(e) });\n  };\n  const clickInput = (e) => {\n    onInputClick && onInputClick(e);\n  };\n  const renderLeftIn = () => {\n    if (!leftIn)\n      return null;\n    return React__default.createElement(\"div\", { className: `${classPrefix}__leftin ${classPrefix}__icon` }, leftIn);\n  };\n  const renderLeft = () => {\n    if (!left)\n      return null;\n    return React__default.createElement(\"div\", { className: `${classPrefix}__left` }, left);\n  };\n  const renderRightIn = () => {\n    if (!rightIn)\n      return null;\n    return React__default.createElement(\"div\", { className: `${classPrefix}__rightin ${classPrefix}__icon` }, rightIn);\n  };\n  const renderRight = () => {\n    if (!right)\n      return null;\n    return React__default.createElement(\"div\", { className: `${classPrefix}__right` }, right);\n  };\n  const handleClear = () => {\n    return React__default.createElement(\n      \"div\",\n      { className: `${classPrefix}__clear ${rightIn ? \"pos-right\" : \"\"}`, onClick: (e) => clearaVal(e) },\n      React__default.createElement(CircleClose, { color: \"#555\", size: 12 })\n    );\n  };\n  const clearaVal = (event) => {\n    if (disabled || readOnly) {\n      return;\n    }\n    setValue(\"\");\n    onClear && onClear(event);\n    forceFocus();\n  };\n  const onKeypress = (e) => {\n    if (e.key === \"Enter\" || e.keyCode === 13) {\n      if (typeof e.cancelable !== \"boolean\" || e.cancelable) {\n        e.preventDefault();\n      }\n      onSearch && onSearch(value);\n    }\n  };\n  return React__default.createElement(\n    \"div\",\n    { className: `${classPrefix} ${disabled ? `${classPrefix}__disabled` : \"\"}  ${className || \"\"}`, style: { ...props.style } },\n    renderLeft(),\n    React__default.createElement(\n      \"div\",\n      { className: `${classPrefix}__content ${shape === \"round\" ? `${classPrefix}__round` : \"\"}` },\n      renderLeftIn(),\n      React__default.createElement(\"div\", { className: \"nut-searchbar__input-box\" }, renderField()),\n      renderRightIn(),\n      clearable && value && handleClear()\n    ),\n    renderRight()\n  );\n};\nSearchBar.defaultProps = defaultProps;\nSearchBar.displayName = \"NutSearchBar\";\nexport {\n  SearchBar as S\n};\n","import React__default, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { ScrollView } from \"@tarojs/components\";\nimport { getSystemInfoSync } from \"@tarojs/taro\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nconst initPositinoCache = (reaItemSize, length = 0) => {\n  let index = 0;\n  const positions = Array(length);\n  while (index < length) {\n    positions[index] = {\n      index,\n      height: reaItemSize,\n      width: reaItemSize,\n      top: index * reaItemSize,\n      bottom: (index + 1) * reaItemSize,\n      left: index * reaItemSize,\n      right: (index + 1) * reaItemSize\n    };\n    index++;\n  }\n  return positions;\n};\nconst binarySearch = (positionsList, horizontal, value = 0) => {\n  let start = 0;\n  let end = positionsList.length - 1;\n  let tempIndex = null;\n  const key = horizontal ? \"right\" : \"bottom\";\n  while (start <= end) {\n    const midIndex = Math.floor((start + end) / 2);\n    const midValue = positionsList[midIndex][key];\n    if (midValue === value) {\n      return midIndex + 1;\n    }\n    if (midValue < value) {\n      start = midIndex + 1;\n    } else if (midValue > value) {\n      if (tempIndex === null || tempIndex > midIndex) {\n        tempIndex = midIndex;\n      }\n      end = midIndex - 1;\n    }\n  }\n  tempIndex = tempIndex || 0;\n  return tempIndex;\n};\nconst updateItemSize = (positions, items, sizeKey) => {\n  const newPos = positions.concat();\n  Array.from(items).forEach((item) => {\n    const index = Number(item.getAttribute(\"data-index\"));\n    const styleVal = item.getAttribute(\"style\");\n    if (styleVal && styleVal.includes(\"none\"))\n      return;\n    const nowSize = item.getBoundingClientRect()[sizeKey];\n    const oldSize = positions[index][sizeKey];\n    const dValue = oldSize - nowSize;\n    if (dValue) {\n      if (sizeKey === \"width\") {\n        newPos[index].right -= dValue;\n        newPos[index][sizeKey] = nowSize;\n        for (let k = index + 1; k < positions.length; k++) {\n          newPos[k].left = positions[k - 1].right;\n          newPos[k].right -= dValue;\n        }\n      } else if (sizeKey === \"height\") {\n        newPos[index].bottom -= dValue;\n        newPos[index][sizeKey] = nowSize;\n        for (let k = index + 1; k < positions.length; k++) {\n          newPos[k].top = positions[k - 1].bottom;\n          newPos[k].bottom -= dValue;\n        }\n      }\n    }\n  });\n};\nconst clientHeight = getSystemInfoSync().windowHeight - 5 || 667;\nconst defaultProps = {\n  ...ComponentDefaults,\n  list: [],\n  containerHeight: clientHeight,\n  itemHeight: 66,\n  itemEqual: true,\n  overscan: 2\n};\nconst VirtualList = (props) => {\n  const { list, itemRender, itemHeight, itemEqual, overscan, key, onScroll, className, containerHeight, ...rest } = {\n    ...defaultProps,\n    ...props\n  };\n  const [startOffset, setStartOffset] = useState(0);\n  const [start, setStart] = useState(0);\n  const scrollRef = useRef(null);\n  const itemsRef = useRef(null);\n  const [positions, setPositions] = useState([\n    {\n      index: 0,\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: 0,\n      height: 0,\n      right: 0\n    }\n  ]);\n  const [offSetSize, setOffSetSize] = useState(containerHeight || 0);\n  const [options, setOptions] = useState({\n    startOffset: 0,\n    startIndex: 0,\n    overStart: 0,\n    endIndex: 10\n    // 可视区域结束索引\n  });\n  useEffect(() => {\n    setPositions((options2) => {\n      return { ...options2, endIndex: visibleCount() };\n    });\n  }, [itemHeight, overscan, offSetSize]);\n  useEffect(() => {\n    if (containerHeight)\n      return;\n    setOffSetSize(getContainerHeight());\n  }, [containerHeight]);\n  useEffect(() => {\n    const pos = initPositinoCache(itemHeight, list.length);\n    setPositions(pos);\n  }, [itemHeight, list]);\n  const getContainerHeight = () => {\n    const initH = itemHeight * list.length;\n    return initH < clientHeight ? initH + overscan * itemHeight - 5 : Math.min(containerHeight, clientHeight);\n  };\n  const visibleCount = () => {\n    return Math.ceil(getContainerHeight() / itemHeight) + overscan;\n  };\n  const end = () => {\n    return start + visibleCount();\n  };\n  const listHeight = () => {\n    return list.length * itemHeight;\n  };\n  const visibleData = () => {\n    return list.slice(start, Math.min(end(), list.length));\n  };\n  const updateTotalSize = useCallback(() => {\n    if (!itemsRef.current)\n      return;\n    const items = itemsRef.current.children;\n    if (!items.length)\n      return;\n    updateItemSize(positions, items, \"height\");\n  }, [positions]);\n  const listScroll = (e) => {\n    const scrollTop = e.detail ? e.detail.scrollTop : e.target.scrollTop;\n    const scrollSize = Math.floor(scrollTop);\n    const startIndex = binarySearch(positions, false, scrollSize);\n    const overStart = startIndex - overscan > -1 ? startIndex - overscan : 0;\n    const endIndex = end();\n    if (!itemEqual) {\n      updateTotalSize();\n    }\n    setStart(Math.floor(scrollTop / itemHeight));\n    setOptions({ startOffset, startIndex, overStart, endIndex });\n    if (end() > list.length - 1) {\n      onScroll && onScroll();\n    }\n    setStartOffset(scrollTop - scrollTop % itemHeight);\n  };\n  return React__default.createElement(\n    \"div\",\n    { className: className ? `${className} nut-virtualList-box` : \"nut-virtualList-box\", ...rest, style: {\n      height: containerHeight ? `${offSetSize}px` : \"\"\n    } },\n    React__default.createElement(\n      ScrollView,\n      { scrollY: true, type: \"list\", ref: scrollRef, className: \"nut-virtuallist\", style: {\n        height: `${getContainerHeight()}px`\n      }, onScroll: listScroll },\n      React__default.createElement(\"div\", { className: \"nut-virtuallist-phantom\", style: { height: `${listHeight()}px` } }),\n      React__default.createElement(\"div\", { className: \"nut-virtuallist-container\", ref: itemsRef, style: { transform: `translate3d(0, ${startOffset}px, 0)` } }, visibleData().map((data, index) => {\n        const { overStart } = options;\n        const dataIndex = overStart + index;\n        key && data[key] ? data[key] : dataIndex;\n        return React__default.createElement(\"div\", { \"data-index\": `${dataIndex}`, className: \"nut-virtuallist-item\", key: `${data}`, style: {\n          height: `${itemEqual ? `${itemHeight}px` : \"auto\"}`\n        } }, itemRender ? itemRender(data, dataIndex, index) : data);\n      }))\n    )\n  );\n};\nVirtualList.defaultProps = defaultProps;\nVirtualList.displayName = \"NutVirtualList\";\nexport {\n  VirtualList as V\n};\n","import { useState, useCallback, useEffect, useRef } from \"react\";\nimport { View } from \"@tarojs/components\";\nimport { SearchBar,Sticky, VirtualList, Checkbox, Divider, Button } from '@nutui/nutui-react-taro';\n\nimport \"./index.scss\";\nimport Taro from \"@tarojs/taro\";\n\n\nconst Install = () => {\n\n  const containerTopRef = useRef(null)\n\n  const tabList = [\n    { title: '全部', key: 'all' },\n    { title: '设计', key: 'design' },\n    { title: '受理', key: 'accept' },\n    { title: '完成', key: 'finish' },\n    { title: '验收', key: 'acceptance' },\n    { title: '废弃', key: 'abandoned' }\n  ];\n\n  const [searchKeyword, setSearchKeyword] = useState<string>('');\n  const [currentTab, setCurrentTab] = useState<string>('all');\n  const [list, setList] = useState<number[]>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [checked, setChecked] = useState<string[]>([]);\n\n  const onHandleSearch = (value: string) => {\n    console.log(value, 'value');\n  };\n\n  const itemVariable = (data: number, dataIndex: number) => {\n    return (\n      <div className=\"rounded-md bg-white mx-4 px-4 py-4\" key={dataIndex} >\n        <div className=\"flex items-center justify-between gap-2\">\n          <Checkbox value={data}/>\n          <div className=\"flex-1\">\n            <div className=\"flex justify-between mb-2\">\n              <div className=\"text-md\">李四</div>\n              <div className=\"flex gap-1 text-xs text-white\">\n                <div className=\"rounded-full leading-5 h-5 px-2 bg-red-500\">已签收</div>\n                <div className=\"rounded-full leading-5 h-5 px-2 bg-blue-500\">征信受理</div>\n              </div>\n            </div>\n            <div className=\"flex justify-between text-xs text-slate-500\">\n              <div>分配员工：张三</div>\n              <div>装机容量(KW):100</div>\n            </div>\n          </div>\n        </div>\n        <Divider className=\"border-slate-50\" style={{\n          borderColor: '#e5e5e5'\n        }} />\n        <div className=\"flex justify-end gap-2\">\n          <Button size=\"small\" type=\"info\" onClick={(e) => {\n            e.preventDefault()\n            Taro.navigateTo({\n              url: `/pages/install-form/index?id=${dataIndex}`\n            })\n          }}>查看资料</Button>\n        </div>\n      </div>\n    )\n  }\n\n  const onScroll = () => {\n    if (pageNo > 10 || isLoading) return\n    setIsLoading(true)\n    setTimeout(() => {\n      setPageNo(pageNo + 1)\n      setIsLoading(false)\n    }, 30)\n  }\n\n  const getData = useCallback(() => {\n    const datas:number[] = []\n    const pageSize = 90\n    for (let i = 10; i < pageSize; i++) {\n      datas.push(i)\n    }\n    setList((list) => {\n        return [...list, ...datas]\n    })\n  }, [])\n\n  useEffect(() => {\n    getData()\n  }, [getData])\n  return (\n    <div ref={containerTopRef}>\n      <Sticky>\n      <View className=\"bg-white\">\n        <SearchBar\n          maxLength={10}\n          placeholder=\"请输入业主姓名\" \n          right=\"搜索\"\n          value={searchKeyword} onChange={ (value) => {\n            console.log(value, 'value')\n            setSearchKeyword(value)\n          }}\n          onSearch={onHandleSearch}\n        />\n        <View className=\"flex justify-center py-4 bg-white\">\n          {\n            tabList.map((item) => (\n              <View className={`flex-1 text-xs text-center`} key={item.key}\n                onClick={() => {\n                  setCurrentTab(item.key)\n                }}\n              >\n                <View className={`${currentTab === item.key ? \" text-blue-600 font-semibold\" : 'text-slate-500'}  mb-1`}>{item.title}</View>\n                <View className={`${currentTab === item.key ? \" text-blue-600 fonts\" : 'text-xs text-slate-800'}`}>{'10'}</View>\n              </View>\n            ))\n          }\n        </View>\n      </View>\n      </Sticky>\n      <View id=\"scrollContainer\" style={{height: 'calc(100vh - 198px)'}} className=\"py-4 box-border bg-[#f5f6f7]\" >\n        <Checkbox.Group\n          style={{height: 'calc(100% - 46px)'}}\n          value={checked} onChange={(value: string[]) => {\n          // setChecked(() => value)\n          setChecked(value);\n          console.log(value, 'value')\n        }}>\n          <VirtualList\n            list={list}\n            itemEqual={false}\n            itemRender={itemVariable}\n\n            onScroll={onScroll}\n            containerHeight={(document.getElementById(\"scrollContainer\")?.offsetHeight || 600 )- 46}\n          >\n          </VirtualList>\n        </Checkbox.Group>\n      </View>\n    </div>\n    \n  );\n};\n\nexport default Install;\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/.pnpm/babel-loader@8.2.1_qxiufrq5yurergrmrmsa5fwjoe/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"电站安装\",\"navigationBarBackgroundColor\":\"#fff\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/install/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}