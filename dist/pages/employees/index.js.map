{"version":3,"file":"pages/employees/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAkBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;AC3JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAGA;AAAA;AAAA;AAKA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AC9DA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA","sources":["webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Dialog_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Popup_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Skeleton_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_dialog.taro-ffad380a.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_skeleton.taro-5a621338.js","webpack://taro-react-tailwind-vscode-template/._src_pages_employees_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_api_me.ts","webpack://taro-react-tailwind-vscode-template/._src_constants_index.ts","webpack://taro-react-tailwind-vscode-template/._src_pages_employees_components_UserForm.tsx","webpack://taro-react-tailwind-vscode-template/./src/pages/employees/index.tsx?3ce5","webpack://taro-react-tailwind-vscode-template/._src_utils_request.ts","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Dialog_style_style.css","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Popup_style_style.css","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Skeleton_style_style.css"],"sourcesContent":["import './style.css'","import './style.css'","import './style.css'","import React__default from \"react\";\nimport classNames from \"classnames\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { View } from \"@tarojs/components\";\nimport { B as Button } from \"./button.taro-25f559e1.js\";\nimport { u as useConfig } from \"./configprovider.taro-c5ff4877.js\";\nimport { O as Overlay } from \"./overlay.taro-626840fc.js\";\nimport { u as useParams, a as useCustomEvent, b as useCustomEventsPath, c as customEvents } from \"./use-custom-event-bb9c7f2e.js\";\nconst Content = (props) => {\n  const { visible, title, footer, footerDirection, onClick, children } = props;\n  const classPrefix = \"nut-dialog\";\n  const renderHeader = () => {\n    return title ? React__default.createElement(\"div\", { className: `${classPrefix}__header` }, title) : null;\n  };\n  const renderFooter = () => {\n    return footer ? React__default.createElement(\"div\", { className: classNames(`${classPrefix}__footer`, {\n      [footerDirection]: footerDirection\n    }) }, footer) : null;\n  };\n  const handleClick = (e) => {\n    onClick && onClick(e);\n  };\n  return React__default.createElement(\n    \"div\",\n    { className: classNames(`${classPrefix}__outer`, props.className), style: props.style, onClick: (e) => handleClick(e) },\n    React__default.createElement(\n      \"div\",\n      { className: classPrefix, style: { display: visible ? \"flex\" : \"none\" } },\n      renderHeader(),\n      React__default.createElement(\n        \"div\",\n        { className: `${classPrefix}__content` },\n        React__default.createElement(React__default.Fragment, null, children)\n      ),\n      renderFooter()\n    )\n  );\n};\nContent.displayName = \"NutContent\";\nconst defaultProps = {\n  title: \"\",\n  content: \"\",\n  footer: \"\",\n  confirmText: \"\",\n  cancelText: \"\",\n  overlay: true,\n  closeOnOverlayClick: true,\n  hideConfirmButton: false,\n  hideCancelButton: false,\n  disableConfirmButton: false,\n  footerDirection: \"horizontal\",\n  lockScroll: true,\n  beforeCancel: () => true,\n  beforeClose: () => true,\n  onOverlayClick: () => void 0\n};\nconst BaseDialog = (props) => {\n  const classPrefix = \"nut-dialog\";\n  const { locale } = useConfig();\n  const { params: { id, className, style, visible, footer, title, content, children, footerDirection, hideConfirmButton, hideCancelButton, lockScroll, disableConfirmButton, closeOnOverlayClick, onOverlayClick, confirmText, cancelText, overlay, onClose, onCancel, onConfirm, beforeCancel, beforeClose }, setParams } = useParams({ ...defaultProps, ...props });\n  useCustomEvent(id, ({ status, options }) => {\n    if (status) {\n      setParams({ ...options, visible: true });\n    } else {\n      setParams({ ...options, visible: false });\n    }\n  });\n  const renderFooter = () => {\n    if (footer === null)\n      return \"\";\n    const handleCancel = (e) => {\n      e.stopPropagation();\n      if (!(beforeCancel == null ? void 0 : beforeCancel()))\n        return;\n      if (!(beforeClose == null ? void 0 : beforeClose()))\n        return;\n      onClose == null ? void 0 : onClose();\n      onCancel == null ? void 0 : onCancel();\n    };\n    const handleOk = (e) => {\n      e.stopPropagation();\n      onClose == null ? void 0 : onClose();\n      onConfirm == null ? void 0 : onConfirm(e);\n    };\n    return footer || React__default.createElement(\n      React__default.Fragment,\n      null,\n      !hideCancelButton && React__default.createElement(Button, { size: \"small\", fill: \"outline\", type: \"primary\", className: `${classPrefix}__footer-cancel`, onClick: (e) => handleCancel(e) }, cancelText || locale.cancel),\n      !hideConfirmButton && React__default.createElement(Button, { size: \"small\", type: \"primary\", className: classNames(`${classPrefix}__footer-ok`, {\n        disabled: disableConfirmButton\n      }), disabled: disableConfirmButton, onClick: (e) => handleOk(e) }, confirmText || locale.confirm)\n    );\n  };\n  const onHandleClickOverlay = (e) => {\n    if (closeOnOverlayClick && visible && e.target === e.currentTarget) {\n      const closed = onOverlayClick && onOverlayClick();\n      closed && (onClose == null ? void 0 : onClose());\n      closed && (onCancel == null ? void 0 : onCancel());\n    }\n  };\n  return React__default.createElement(\n    View,\n    { style: { display: visible ? \"block\" : \"none\" }, catchMove: lockScroll },\n    React__default.createElement(\n      React__default.Fragment,\n      null,\n      overlay ? React__default.createElement(Overlay, { visible: true, closeOnOverlayClick, lockScroll, onClick: onHandleClickOverlay, className: classNames(\"nut-dialog-overlay\") }) : null,\n      React__default.createElement(\n        CSSTransition,\n        { in: visible, timeout: 300, classNames: \"fadeDialog\", unmountOnExit: true, appear: true },\n        React__default.createElement(Content, { className, style, title, footer: renderFooter(), footerDirection, visible }, content || children)\n      )\n    )\n  );\n};\nfunction open(selector, options) {\n  const path = useCustomEventsPath(selector);\n  customEvents.trigger(path, { status: true, options });\n}\nfunction close(selector) {\n  const path = useCustomEventsPath(selector);\n  customEvents.trigger(path, { status: false });\n}\nBaseDialog.defaultProps = defaultProps;\nBaseDialog.displayName = \"NutDialog\";\nBaseDialog.open = open;\nBaseDialog.close = close;\nexport {\n  BaseDialog as B\n};\n","import React__default from \"react\";\nimport classNames from \"classnames\";\nimport { A as Avatar } from \"./avatar.taro-1743c7c3.js\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nconst defaultProps = {\n  ...ComponentDefaults,\n  rows: 1,\n  animated: false,\n  title: false,\n  avatar: false,\n  avatarSize: \"50px\",\n  visible: false,\n  avatarShape: \"round\"\n};\nconst Skeleton = (props) => {\n  const { className, animated, rows, title, avatar, avatarSize, visible, children, avatarShape, ...rest } = {\n    ...defaultProps,\n    ...props\n  };\n  const classPrefix = \"nut-skeleton\";\n  const classes = classNames(className, classPrefix);\n  const avatarClass = classNames({\n    avatar: true,\n    [`avatar--${avatarShape}`]: avatarShape\n  });\n  const repeatLines = (num) => {\n    return Array.from({ length: num }, (v, i) => i);\n  };\n  const getStyle = () => {\n    if (avatarSize) {\n      return {\n        width: avatarSize,\n        height: avatarSize\n      };\n    }\n    return {\n      width: \"50px\",\n      height: \"50px\"\n    };\n  };\n  return React__default.createElement(React__default.Fragment, null, visible ? React__default.createElement(\"div\", null, children) : React__default.createElement(\n    \"div\",\n    { className: classes, ...rest },\n    animated && React__default.createElement(\"div\", { className: `${classPrefix}__animation` }),\n    React__default.createElement(\n      \"div\",\n      { className: `${classPrefix}__content` },\n      avatar && React__default.createElement(Avatar, { className: avatarClass, background: \"rgb(239, 239, 239)\", shape: avatarShape, style: getStyle(), icon: \"null\" }),\n      rows === 1 ? React__default.createElement(\"div\", { className: `${classPrefix}__block` }) : React__default.createElement(\n        \"div\",\n        { className: `${classPrefix}__content-line` },\n        title && React__default.createElement(\"div\", { className: `${classPrefix}__title` }),\n        repeatLines(rows).map((item, index) => {\n          return React__default.createElement(\"div\", { className: `${classPrefix}__block`, key: index });\n        })\n      )\n    )\n  ));\n};\nSkeleton.defaultProps = defaultProps;\nSkeleton.displayName = \"NutSkeleton\";\nexport {\n  Skeleton as S\n};\n","import React, { useEffect, useRef, useState } from 'react'\n\nimport { getAgentEmployees, addAgentEmployees, updateAgentEmployees, deleteAgentEmployees } from '@/api/me'\nimport { Skeleton, Checkbox, Divider, Sticky, Button, Dialog } from '@nutui/nutui-react-taro';\nimport { Edit, Setting} from '@nutui/icons-react-taro'\nimport UserForm from './components/UserForm';\n\nimport { EnumEmployeesMap } from '@/constants/index'\nimport Taro from '@tarojs/taro';\n\nconst Employees = () => {\n\n  const formRef = useRef<any>(null)\n\n  const [employees, setEmployees] = useState<any[]>([])\n  const [loading, setLoading] = useState(false)\n  const [checked, setChecked] = useState<any[]>([])\n\n  const handleDelete = () => {\n    console.log(checked.length, 'checked.length')\n    if (!checked.length) {\n      Taro.showToast({ title: '请先选择员工', icon: 'error' })\n      return\n    }\n    // Dialog.open('dialog')\n    Dialog.open('dialog', {\n      title:  `删除 ${checked.length} 个员工`,\n      content: '删除之后不可恢复，请谨慎操作！',\n      onConfirm: () => {\n        deleteAgentEmployees(checked.join(',')).then(() => {\n          Taro.showToast({ title: '删除成功', icon: 'success' })\n          getList()\n          Dialog.close('dialog')\n        })\n      },\n      onCancel: () => {\n        Dialog.close('dialog')\n      },\n    })\n    \n  }\n\n  const onConfirm = async (values: any) => {\n    let params = (Object.assign(values, { agentId: '1714824027148750848' }))\n    if (values.id) {\n      updateAgentEmployees(params).then(res => {\n        Taro.showToast({ title: '添加成功', icon: 'success' })\n        formRef.current.closePopup()\n        getList()\n      })\n      return\n    }\n\n    addAgentEmployees(params).then(res => {\n      Taro.showToast({ title: '添加成功', icon: 'success' })\n      formRef.current.closePopup()\n      getList()\n    })\n  }\n\n  const getList = () => {\n    setLoading(true)\n    getAgentEmployees({agentId: '1714824027148750848'}).then(res => {\n      let { rows } = res\n      if (rows && rows.length) {\n        setEmployees(rows)\n        return\n      }\n      setEmployees([])\n\n    }).finally(() => {\n      setLoading(false)\n    })\n  }\n  useEffect(() => {\n    getList()\n    // formRef.current.openPopup()\n  }, [])\n  return (\n    <div className='bg-[#f5f6f7] h-full py-2'>\n      {\n        loading ? ( <Skeleton rows={6} title animated />) :\n        (\n          <>\n          <Checkbox.Group value={checked} onChange={setChecked}>\n            <div className='px-4'>\n              {\n                employees.map(item => (\n                  <div className='rounded-md bg-white px-3 py-4 shadow-md mb-4' key={item.id}>\n                    <div className='flex justify-between gap-2'>\n                      <div className='flex items-center gap-1'>\n                        <Checkbox value={item.id}></Checkbox>\n                        <div className='text-sm'>\n                          <div className='text-slate-800 mb-2'>\n                            <span>{item.name}</span>\n                            <span className='text-xs ml-2 items-baseline text-yellow-600'>{ item.type && EnumEmployeesMap[item.type] }</span>\n                          </div>\n                          <div className='text-xs text-slate-600'>\n                            {item.phone}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className='text-sm flex-1 text-center'>\n                        <div className='text-red-600 mb-2'>\n                          0\n                        </div>\n                        <div className='text-xs text-slate-600'>\n                          安装工单\n                        </div>\n                      </div>\n                      <div className='text-sm flex-1 text-center'>\n                        <div className='text-red-600 mb-2'>\n                          0\n                        </div>\n                        <div className='text-xs text-slate-600'>\n                          售后工单\n                        </div>\n                      </div>\n\n                    </div>\n                    <Divider style={{borderColor: '#f5f6f7'}} />\n                    <div className='flex justify-between text-xs text-center text-red-600'>\n                      <div className='flex-1 flex items-center justify-center gap-1'>\n                        <Setting />\n                        分配权限\n                      </div>\n                      <Divider direction='vertical' style={{borderColor: '#f5f6f7', height: '16px'}} />\n                      <div className='flex-1 flex items-center justify-center gap-1' onClick={() => formRef.current.openPopup(item)}>\n                        <Edit />\n                        编辑\n                      </div>\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n          </Checkbox.Group>\n          <Sticky threshold={0} position=\"bottom\">\n            <div className='px-4'>\n              <div className='py-2 px-2 shadow-md rounded-md bg-white flex gap-6 items-center justify-center'>\n                <Button className='flex-1' type='primary' fill='outline' onClick={handleDelete}>+ 删除</Button>\n                <Button className='flex-1' onClick={() => formRef.current.openPopup()}>+ 新增</Button>\n              </div>\n            </div>\n          </Sticky>\n          </>\n        )\n      }\n      <UserForm ref={formRef} onConfirm={onConfirm} />\n      <Dialog id=\"dialog\" />\n    </div>\n  )\n}\n\nexport default Employees","import request from '@/utils/request'\n\n// // 登录方法\n// export function login(username, password, code, uuid) {\n//   const data = {\n//     username,\n//     password,\n//     code,\n//     uuid\n//   }\n//   return request({\n//     url: '/login',\n//     headers: {\n//       isToken: false,\n//       repeatSubmit: false\n//     },\n//     method: 'post',\n//     data: data\n//   })\n// }\n\n// // 注册方法\n// export function register(data) {\n//   return request({\n//     url: '/register',\n//     headers: {\n//       isToken: false\n//     },\n//     method: 'post',\n//     data: data\n//   })\n// }\n\n// // 获取用户详细信息\n// export function getInfo() {\n//   return request({\n//     url: '/getInfo',\n//     method: 'get'\n//   })\n// }\n\n// // 退出方法\n// export function logout() {\n//   return request({\n//     url: '/logout',\n//     method: 'post'\n//   })\n// }\n\n// // 获取验证码\n// export function getCodeImg() {\n//   return request({\n//     url: '/captchaImage',\n//     headers: {\n//       isToken: false\n//     },\n//     method: 'get',\n//     timeout: 20000\n//   })\n// }\n\nexport const getAgentEmployees = (data) => {\n  return request({\n    url: '/app-agent/agent/user/list',\n    method: 'get',\n    data: data\n  })\n}\n\nexport const addAgentEmployees = (data) => {\n  return request({\n    url: '/app-agent/agent/user',\n    method: 'post',\n    data: data\n  })\n}\n\nexport const updateAgentEmployees = (data) => {\n  return request({\n    url: '/app-agent/agent/user',\n    method: 'put',\n    data: data\n  })\n}\n\n\nexport const deleteAgentEmployees = (ids) => {\n  return request({\n    url: `/app-agent/agent/user/${ids}`,\n    method: 'delete',\n  })\n}","export enum EnumEmployees {\n  subAdmin = '子管理员',\n  normalEmployee = '普通员工'\n}\n\nexport const EnumEmployeesMap = {\n  subAdmin: '子管理员',\n  normalEmployee: '普通员工'\n}","import React, { useImperativeHandle, forwardRef, useState } from 'react';\nimport { Popup, Form, Input, Radio, Button } from '@nutui/nutui-react-taro';\nimport { EnumEmployeesMap } from '@/constants'\nimport Taro from '@tarojs/taro';\n\ntype IProps = {\n  onConfirm: (values: any) => void\n}\nconst UserForm = (props: IProps, ref) => {\n\n  let { onConfirm } = props;\n\n  const [showBasic, setShowBasic] = useState(false);\n\n  const [item, setItem] = useState<null|Object>(null)\n  const [form] = Form.useForm();\n\n  // 使用 useImperativeHandle 定义要暴露给父组件的函数\n  useImperativeHandle(ref, () => ({\n    // 这里可以定义要暴露给父组件的函数\n    openPopup: (item) => {\n      if (item) {\n        setItem(item)\n      } else {\n        setItem({\n          type: 'normalEmployee',\n          pssword: 'admin123'\n        })\n      }\n\n      setShowBasic(true);\n    },\n    closePopup: () => {\n      form.resetFields();\n      setItem(null)\n      setShowBasic(false);\n    },\n  }));\n\n  return (\n    <Popup\n      style={{width: '80%'}}\n      lockScroll visible={showBasic} onClose={() => setShowBasic(false)}>\n      <div className='bg-white rounded-md shadow-md min-w-2/3 w-full py-4 py-2'>\n        <div className=' rounded-b-md text-center text-sm leading-8 text-gray-800'>编辑信息</div>\n        <Form\n          initialValues={item}\n          divider\n          form={form}\n          onFinish={(values) => {\n            if (!values) {\n              Taro.showToast({title: '请先填写表单', icon: 'error'})\n              return\n            }\n            let { name, phone, pssword, type } = values\n            let errorText = ''\n            if (!name) {\n              errorText += '姓名 '\n            }\n            if (!phone) {\n              errorText += '电话 '\n            }\n            if (!pssword) {\n              errorText += '密码 '\n            }\n            if (!type) {\n              errorText += '管理员 '\n            }\n            if (!errorText) {\n              onConfirm(Object.assign((item|| {}), values))\n              return\n            }\n            Taro.showToast({title: `${errorText}不能为空`, icon: 'error'})\n          }}\n          // onFinishFailed={(values, errors) => submitFailed(errors)}\n          footer={\n            <div className=\"w-full\">\n              <Button formType=\"submit\" block type=\"primary\">\n                提交\n              </Button>\n            </div>\n          }\n        >\n          <Form.Item name='name' label='员工姓名'>\n            <Input placeholder='请输入姓名' type='text' maxLength={6} />\n          </Form.Item>\n          <Form.Item name='phone' label='电话号码'>\n            <Input placeholder='请输入电话号码' type='mobile' maxLength={11} />\n          </Form.Item>\n          <Form.Item name='pssword' label='密码'>\n            <Input placeholder='请输入密码' type='password' maxLength={18} />\n          </Form.Item>\n          <Form.Item name='type' label='是否管理员'>\n            <Radio.Group direction=\"horizontal\">\n              <Radio value=\"subAdmin\">是</Radio>\n              <Radio value=\"normalEmployee\">否</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Form>\n      </div>\n    </Popup>\n  );\n}\n\nexport default forwardRef(UserForm);\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/.pnpm/babel-loader@8.2.1_qxiufrq5yurergrmrmsa5fwjoe/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"员工列表\",\"navigationBarBackgroundColor\":\"#f5f6f7\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/employees/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import Taro from '@tarojs/taro';\n// import { getToken } from '@/utils/auth';\n\nconst errorCode = {\n  '401': '认证失败，无法访问系统资源',\n  '403': '当前操作没有权限',\n  '404': '访问资源不存在',\n  'default': '系统未知错误，请反馈给管理员'\n}\n\nconst envConfig = {\n  development: {\n    API_BASE_URL: 'http://162.14.70.114:8080', // 开发环境的 API 地址\n  },\n  production: {\n    API_BASE_URL: 'https://api.example.com', // 生产环境的 API 地址\n  },\n};\n\n// 创建Taro请求实例\nconst request = (options) => {\n  // const token = Taro.getStorageSync('token');\n\n  // 设置请求头\n  const headers = {\n    'Content-Type': 'application/json;charset=utf-8',\n  };\n\n  // if (token) {\n  //   headers['Authorization'] = 'Bearer ' + token;\n  // }\n\n  const { url, data, method = 'GET' } = options;\n  let env = process.env.NODE_ENV || 'development';\n  console.log(   envConfig[env].API_BASE_URL + url, 'process.env.NODE_ENV')\n\n  return Taro.request({\n    url: envConfig[env].API_BASE_URL + url,\n    data,\n    method,\n    header: headers,\n  })\n    .then((response) => {\n      const { statusCode, data } = response;\n      console.log(response, 'response')\n      if (statusCode === 200) {\n        return data;\n      } else {\n        const errorText = errorCode[statusCode] || errorCode['default'];\n        Taro.showToast(errorText)\n        return {}\n        // 处理其他响应状态码\n        // return Promise.reject(new Error(`Request failed with status code ${statusCode}`));\n      }\n    })\n    .catch((error) => {\n      // 处理请求错误\n      console.error('Error:', error);\n      return Promise.reject(error);\n    });\n};\n\nexport default request;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}