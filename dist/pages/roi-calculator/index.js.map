{"version":3,"file":"pages/roi-calculator/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;AClQA;AACA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC1DA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro-react-tailwind-vscode-template/._src_pages_roi-calculator_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_CousPicker_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_pages_roi-calculator_const.ts","webpack://taro-react-tailwind-vscode-template/./src/pages/roi-calculator/index.tsx?120e"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Divider,\n  Radio,\n} from '@nutui/nutui-react-taro';\nimport { Retweet } from '@nutui/icons-react-taro'\n\nimport CousPicker from \"@/components/CousPicker\";\n\nimport { BankList, RepaymentPeriodList, DownPaymentRatios, RepaymentList } from './const'\nconst listData1 = [\n  { value: '600', text: 'HI-MO6',},\n  { value: '500', text: 'HI-MO5',},\n]\n\nconst DividerStyles = {\n  borderColor: '#f5f6f7'\n}\n\nimport './index.scss'\nimport Taro from \"@tarojs/taro\";\n\nconst RoiCalculator = () => {\n\n  const [form] = Form.useForm()\n\n  const [powerStationArea, setPowerStationArea] = useState<string>('0')\n  const [componentCapacity, setComponentCapacity] = useState<string>('0')\n\n  useEffect(() => {\n    form.setFieldsValue({\n      componentPower: 6,\n      back: 'ICBC',\n      repaymentPeriod: '10',\n      repayment: 'interest',\n      powerGeneration: '1527',\n      electricityPrice: '0.3360',\n      componentArea: 2.583\n    })\n  }, [])\n\n  return (\n    <div className=\"h-full\">\n      <Form\n        divider\n        form={form}\n        labelPosition=\"right\"\n      \n        onFinish={(valuse) => {\n          console.log(valuse, 'valuse')\n          Taro.navigateTo({\n            url: '/pages/roi-calculator-detail/index',\n          })\n        }}\n        footer={\n          <>\n            <Button formType=\"submit\" fill=\"outline\" block type=\"primary\">\n              开始测算\n            </Button>\n          </>\n        }\n      >\n        <div className=\"px-4\">\n          <div className=\"flex justify-between items-center text-xs text-slate-600 mb-2\">\n            <div>测算区域</div>\n            <div className=\"gap-4 flex items-center\">\n              <span>云省-昆明市</span>\n              <Retweet />\n            </div>\n          </div>\n          <Form.Item\n            label=\"年发电等效小时数\"\n            name=\"powerGeneration\"\n          >\n            <div className=\"flex items-center justify-between border\">\n              <Input\n                placeholder=\"请输入小时数\"\n                type=\"number\"\n                defaultValue=\"1527\"\n              />\n              <span>小时</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"当地上网电价\"\n            name=\"electricityPrice\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <Input\n                placeholder=\"请输入当地上网电价\"\n                type=\"number\"\n                defaultValue=\"0.3360\"\n                disabled\n              />\n              <span>元/小时</span>\n            </div>\n            \n          </Form.Item>\n        </div>\n        <Divider style={DividerStyles} />\n        <div className=\"px-4\">\n          <div className=\"flex justify-between items-center text-xs text-slate-600 mb-2\">\n            <div>电站基本信息</div>\n          </div>\n          <Form.Item\n            label=\"组件型号\"\n            name=\"componentModel\"\n          >\n            <CousPicker  listOptions={listData1} defaultValue=\"600\" handleConfirm={ (val: any) => {\n              form.setFieldsValue({\n                name: val\n              })\n            } }></CousPicker>\n          </Form.Item>\n          <Form.Item\n            label=\"组件面积\"\n            name=\"componentArea\"\n          >\n            <div className=\"flex items-center justify-between border\">\n              <Input\n                placeholder=\"请输入组件面积\"\n                type=\"number\"\n                defaultValue=\"2.583\"\n                disabled\n              />\n              <span>m²</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"组件块数\"\n            name=\"componentCount\"\n          >\n            <div className=\"flex items-center justify-between border\">\n              <Input\n                placeholder=\"请输入组件块数\"\n                type=\"number\"\n                onChange={(value) => {\n                  let componentArea = form.getFieldValue('componentArea')\n                  let componentPower = form.getFieldValue('componentPower')\n                  let powerStationArea = (componentArea * (Number(value) || 0)).toFixed(2)\n                  let componentCapacity = (componentPower * (Number(value) || 0)).toFixed(2)\n                  form.setFieldsValue({\n                    powerStationArea: powerStationArea,\n                    componentCapacity: componentCapacity,\n                  })\n                  setComponentCapacity(componentCapacity)\n                  setPowerStationArea(powerStationArea)\n\n                  console.log(componentArea,componentPower, value, 'componentArea')\n                  console.log(form.getFieldValue('powerStationArea'))\n                }}\n              />\n              <span>块</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"组件功率\"\n            name=\"componentPower\"\n          >\n            <CousPicker  listOptions={listData1} defaultValue=\"6\" handleConfirm={ (val: any) => {\n              form.setFieldsValue({\n                componentPower: val\n              })\n            } }></CousPicker>\n          </Form.Item>\n          <Form.Item\n            label=\"组件容量\"\n            name=\"componentCapacity\"\n          >\n            <div className=\"flex items-center justify-between border\">\n              <Input\n                placeholder=\"请输入组件容量\"\n                type=\"number\"\n                value={componentCapacity}\n                disabled\n              />\n              <span>KW</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"电站面积\"\n            name=\"powerStationArea\"\n          >\n            <div className=\"flex items-center justify-between border\">\n              <Input\n                placeholder=\"请输入电站面积\"\n                disabled\n                value={powerStationArea}\n                type=\"number\"\n              />\n              <span>m²</span>\n            </div>\n          </Form.Item>\n          <div className=\" bg-slate-200 rounded-md px-4 py-4  leading-6 text-xs\">\n            <div className=\"text-xs text-slate-800\">说明</div>\n            <div className=\" text-slate-400\">装机容量：装机容量=组件块数 * 组件功率</div>\n            <div className=\" text-slate-400\">电站面积：电站面积=组件块数 * 组件面积</div>\n          </div>\n        </div>\n        <Divider style={DividerStyles} />\n\n        <div className=\"px-4\">\n          <div className=\"flex justify-between items-center text-xs text-slate-600 mb-2\">\n            <div>合作银行</div>\n          </div>\n          <Radio.Group \n            onChange={(value) => {\n              form.setFieldsValue({\n                back: value\n              })\n            }}\n            defaultValue=\"ICBC\" direction=\"horizontal\">\n            {\n              BankList.map(item => (\n                <Radio shape=\"button\" key={item.value} value={item.value}>\n                  {item.label}\n                </Radio>\n              ))\n            }\n          </Radio.Group>\n          <div className=\"flex justify-between items-center text-xs text-slate-600 mb-2 pt-4\">\n            <div>还款年限</div>\n          </div>\n          <Radio.Group onChange={(value) => {\n            form.setFieldsValue({\n              repaymentPeriod: value\n            })\n          }} \n          defaultValue=\"10\" direction=\"horizontal\">\n            {\n              RepaymentPeriodList.map(item => (\n                <Radio shape=\"button\" key={item.value} value={item.value}>\n                  {item.label}\n                </Radio>\n              ))\n            }\n          </Radio.Group>\n         \n          <div className=\"flex justify-between items-center text-xs text-slate-600 mb-2 pt-4\">\n            <div>还款方式</div>\n          </div>\n          <Radio.Group defaultValue=\"interest\" direction=\"horizontal\">\n            {\n              RepaymentList.map(item => (\n                <Radio shape=\"button\" disabled={item.disabled} key={item.value} value={item.value}>\n                  {item.label}\n                </Radio>\n              ))\n            }\n          </Radio.Group>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default RoiCalculator;\n","import { Cell, Picker } from '@nutui/nutui-react-taro'\nimport React, { useEffect, useState } from 'react'\nimport { DownArrow } from '@nutui/icons-react-taro'\nimport { PickerOption } from '@nutui/nutui-react-taro/dist/types/packages/picker'\n\ninterface OptionData {\n  value: string | number,\n  text: string\n}\ntype IProps = {\n  defaultValue: string,\n  listOptions: OptionData[],\n  handleConfirm: (val) => void\n}\n\nconst CousPicker = (props: IProps) => {\n  const { defaultValue, listOptions,  handleConfirm } = props\n\n  console.log(defaultValue, listOptions, 'defaultValue, listOptions')\n\n  const [isPickerVisible, setIsPickerVisible] = useState<boolean>(false)\n  const [baseDefault, setBaseDefault] = useState('')\n\n\n  const confirmPicker = (options: PickerOption[]) => {\n    setBaseDefault(options[0]?.text || '请选择');\n    handleConfirm(options[0]?.value || '')\n    setIsPickerVisible(false);\n  };\n\n  useEffect(() => {\n    const defaultItem = listOptions.find((item) => item.value === defaultValue);\n    setBaseDefault(defaultItem?.text || '请选择');\n    handleConfirm(defaultValue)\n  }, [defaultValue]);\n\n  return (\n    <>\n      <div className='flex justify-between items-center' onClick={() => {\n        setIsPickerVisible(!isPickerVisible)\n      }}>\n        <span>{baseDefault}</span>\n        <DownArrow />\n      </div>\n      <Picker\n        visible={isPickerVisible}\n        options={listOptions}\n        onConfirm={(list, values) => confirmPicker(list, values)}\n        onClose={() => setIsPickerVisible(false)}\n       />\n    </>\n  )\n}\n\nexport default CousPicker\n\nfunction handleConfirm(arg0: string | number) {\n  throw new Error('Function not implemented.')\n}\n","export const BankList = [\n  {\n    label: '招商银行',\n    value: 'ChinaMerchantsBank'\n  },\n  {\n    label: '工商银行',\n    value: 'ICBC'\n  }\n]\n\nexport const RepaymentPeriodList = [\n  {\n    label: '10年',\n    value: '10'\n  },\n  {\n    label: '12年',\n    value: '12'\n  },\n  {\n    label: '15年',\n    value: '15'\n  },\n\n]\nexport const DownPaymentRatios = [\n  {\n    label: '0%',\n    value: '0'\n  },\n  {\n    label: '10%',\n    value: '10'\n  },\n  {\n    label: '20%',\n    value: '20'\n  },\n  {\n    label: '30%',\n    value: '30'\n  },\n  {\n    label: '50%',\n    value: '50'\n  },\n]\n\n\nexport const RepaymentList = [\n  {\n    label: '等额本息',\n    value: 'interest'\n  },\n  {\n    label: '等额本金',\n    value: 'principal',\n    disabled: true\n  },\n]","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/.pnpm/babel-loader@8.2.1_qxiufrq5yurergrmrmsa5fwjoe/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"收益计算\",\"navigationBarBackgroundColor\":\"#fff\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/roi-calculator/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}