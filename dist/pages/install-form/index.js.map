{"version":3,"file":"pages/install-form/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClzhBA;AACA;AACA;AAEA;;AAEA;;AAOA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;AC7JA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAGA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AAGA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;ACrJA;AAAA;AAIA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAGA;AAAA;AAAA;AAKA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;;AC1HA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA","sources":["webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_TextArea_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Toast_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Uploader_style_css.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_index-e3184f19.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_progress.taro-421575b9.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_textarea.taro-6ebe789c.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_toast.taro-50ee73e6.js","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_uploader.taro-da0414ba.js","webpack://taro-react-tailwind-vscode-template/._src_pages_install-form_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_Anchor_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_ContractData_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_ElectricalDesign_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_HouseInformation_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_InstallationContract_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_LoanData_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_ProductCost_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_components_SurveyData_index.tsx","webpack://taro-react-tailwind-vscode-template/._src_hooks_useToast.tsx","webpack://taro-react-tailwind-vscode-template/./src/pages/install-form/index.tsx?7563","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_TextArea_style_style.css","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Toast_style_style.css","webpack://taro-react-tailwind-vscode-template/._node_modules_.pnpm_@nutui+nutui-react-taro@2.0.20_biqbaboplfbrettd7655fr4n2y_node_modules_@nutui_nutui-react-taro_dist_esm_Uploader_style_style.css"],"sourcesContent":["import './style.css'","import './style.css'","import './style.css'","const isObject = (val) => val !== null && typeof val === \"object\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isPromise = (val) => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nexport {\n  isObject as a,\n  isPromise as i\n};\n","import React__default, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nconst defaultProps = {\n  ...ComponentDefaults,\n  percent: 0,\n  showText: false,\n  animated: false,\n  delay: 0\n};\nconst Progress = (props) => {\n  const { className, style, percent, background, color, strokeWidth, showText, animated, children, delay, ...rest } = {\n    ...defaultProps,\n    ...props\n  };\n  const classPrefix = \"nut-progress\";\n  const classesInner = classNames({\n    [`${classPrefix}-inner`]: true,\n    [`${classPrefix}-active`]: animated\n  });\n  const stylesOuter = {\n    height: `${strokeWidth}px`,\n    background\n  };\n  const [displayPercent, setDispalyPercent] = useState(0);\n  const stylesInner = {\n    width: `${displayPercent}%`,\n    background: color\n  };\n  useEffect(() => {\n    setDispalyPercent(percent);\n  }, [percent]);\n  useEffect(() => {\n    let timer = null;\n    if (delay) {\n      setDispalyPercent(0);\n      timer = setTimeout(() => {\n        setDispalyPercent(percent);\n      }, delay);\n    }\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, []);\n  return React__default.createElement(\n    \"div\",\n    { className: classNames(classPrefix, className), style, ...rest },\n    React__default.createElement(\n      \"div\",\n      { className: `${classPrefix}-outer`, style: stylesOuter },\n      React__default.createElement(\"div\", { className: classesInner, style: stylesInner }, showText && React__default.createElement(\"div\", { className: `${classPrefix}-text`, style: { left: `${displayPercent}%` } }, children || React__default.createElement(\n        \"div\",\n        { className: `${classPrefix}-text__inner`, style: {\n          background: color\n        } },\n        percent,\n        \"%\"\n      )))\n    )\n  );\n};\nProgress.defaultProps = defaultProps;\nProgress.displayName = \"NutProgress\";\nexport {\n  Progress as P\n};\n","import React__default, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport Taro from \"@tarojs/taro\";\nimport { Textarea } from \"@tarojs/components\";\nimport { u as useConfig } from \"./configprovider.taro-c5ff4877.js\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nimport { u as usePropsValue } from \"./use-props-value-c78cbf9b.js\";\nconst defaultProps = {\n  ...ComponentDefaults,\n  defaultValue: \"\",\n  showCount: false,\n  maxLength: 140,\n  placeholder: \"\",\n  readOnly: false,\n  disabled: false,\n  autoSize: false\n};\nconst TextArea = (props) => {\n  const { locale } = useConfig();\n  const { className, value, defaultValue, showCount, maxLength, rows, placeholder, readOnly, disabled, autoSize, style, onChange, onBlur, onFocus, ...rest } = { ...defaultProps, ...props };\n  const classPrefix = \"nut-textarea\";\n  const compositionRef = useRef(false);\n  const format = (value2) => {\n    if (maxLength !== void 0 && value2.length > maxLength) {\n      return value2.substring(0, maxLength);\n    }\n    return value2;\n  };\n  const [inputValue, setInputValue] = usePropsValue({\n    value,\n    defaultValue,\n    finalValue: format(defaultValue),\n    onChange\n  });\n  const handleChange = (event) => {\n    var _a;\n    const text = (_a = event == null ? void 0 : event.detail) == null ? void 0 : _a.value;\n    if (text) {\n      const value2 = compositionRef.current ? text : format(text);\n      setInputValue(value2);\n    } else {\n      setInputValue(\"\");\n    }\n  };\n  const handleFocus = (event) => {\n    if (disabled)\n      return;\n    if (readOnly)\n      return;\n    onFocus && onFocus(event);\n  };\n  const handleBlur = (event) => {\n    if (disabled)\n      return;\n    if (readOnly)\n      return;\n    onBlur && onBlur(event);\n  };\n  return React__default.createElement(\n    \"div\",\n    { className: classNames(classPrefix, className, {\n      [`${classPrefix}__disabled`]: disabled\n    }) },\n    React__default.createElement(Textarea, {\n      nativeProps: {\n        style,\n        readOnly,\n        rows,\n        onCompositionStart: () => {\n          compositionRef.current = true;\n        },\n        onCompositionEnd: () => {\n          compositionRef.current = false;\n        }\n      },\n      className: `${classPrefix}__textarea`,\n      style: Taro.getEnv() === \"WEB\" ? void 0 : style,\n      disabled: Taro.getEnv() === \"WEB\" ? disabled : disabled || readOnly,\n      value: inputValue,\n      // @ts-ignore\n      onInput: (e) => handleChange(e),\n      onBlur: (e) => handleBlur(e),\n      onFocus: (e) => handleFocus(e),\n      autoHeight: autoSize,\n      maxlength: maxLength,\n      placeholder: placeholder || locale.placeholder,\n      ...rest\n    }),\n    showCount && React__default.createElement(\n      \"div\",\n      { className: `${classPrefix}__limit` },\n      inputValue.length,\n      \"/\",\n      maxLength < 0 ? 0 : maxLength\n    )\n  );\n};\nTextArea.defaultProps = defaultProps;\nTextArea.displayName = \"NutTextArea\";\nexport {\n  TextArea as T\n};\n","import React__default, { useRef, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { Success, Failure, Tips, Loading } from \"@nutui/icons-react-taro\";\nimport { O as Overlay } from \"./overlay.taro-626840fc.js\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nimport { u as useParams, a as useCustomEvent, b as useCustomEventsPath, c as customEvents } from \"./use-custom-event-bb9c7f2e.js\";\nimport { u as usePropsValue } from \"./use-props-value-c78cbf9b.js\";\nconst defaultProps = {\n  ...ComponentDefaults,\n  id: \"\",\n  icon: null,\n  iconSize: \"20\",\n  msg: \"\",\n  duration: 2,\n  position: \"center\",\n  type: \"text\",\n  title: \"\",\n  closeOnOverlayClick: false,\n  lockScroll: false,\n  contentClassName: \"\",\n  size: \"base\",\n  visible: false,\n  onClose: () => {\n  }\n  // 未实现\n};\nconst classPrefix = \"nut-toast\";\nconst Toast = (props) => {\n  const { params: { id, position, contentStyle, icon, iconSize, msg, duration, type, title, closeOnOverlayClick, lockScroll, contentClassName, visible, size, className, style, onClose }, setParams } = useParams({ ...defaultProps, ...props });\n  const timer = useRef(-1);\n  const [innerVisible, setInnerVisible] = usePropsValue({\n    value: visible,\n    defaultValue: void 0,\n    finalValue: false,\n    onChange: (v) => {\n      !v && (onClose == null ? void 0 : onClose());\n    }\n  });\n  useEffect(() => {\n    if (innerVisible) {\n      autoClose();\n    }\n  }, [innerVisible, duration]);\n  useCustomEvent(id, ({ status, options }) => {\n    if (status) {\n      options.visible = true;\n      setParams(options);\n      show2();\n    } else {\n      setParams({ visible: false });\n      hide2();\n    }\n  });\n  const clearTimer = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = -1;\n    }\n  };\n  const show2 = () => {\n    setInnerVisible(true);\n  };\n  const hide2 = () => {\n    clearTimer();\n    setInnerVisible(false);\n  };\n  const autoClose = () => {\n    clearTimer();\n    if (duration) {\n      timer.current = window.setTimeout(() => {\n        setParams({ visible: false });\n        hide2();\n      }, duration * 1e3);\n    }\n  };\n  const clickCover = () => {\n    if (closeOnOverlayClick) {\n      hide2();\n    }\n  };\n  const hasIcon = () => {\n    if (type !== \"text\") {\n      return true;\n    }\n    return !!icon;\n  };\n  const iconName = () => {\n    if (icon) {\n      return icon;\n    }\n    return {\n      success: React__default.createElement(Success, { color: \"#ffffff\", width: iconSize, height: iconSize }),\n      fail: React__default.createElement(Failure, { color: \"#ffffff\", width: iconSize, height: iconSize }),\n      warn: React__default.createElement(Tips, { color: \"#ffffff\", width: iconSize, height: iconSize }),\n      loading: React__default.createElement(Loading, { color: \"#ffffff\", width: iconSize, height: iconSize })\n    }[type];\n  };\n  const classes = classNames({\n    \"nut-toast-has-icon\": icon,\n    [`nut-toast-${size}`]: true\n  });\n  return React__default.createElement(React__default.Fragment, null, innerVisible ? React__default.createElement(\n    Overlay,\n    { visible: innerVisible, style, className: `${classPrefix}__overlay-default ${className}`, closeOnOverlayClick, lockScroll, onClick: () => {\n      clickCover();\n    } },\n    React__default.createElement(\n      \"div\",\n      { className: `${classPrefix} ${classes}`, id },\n      React__default.createElement(\n        \"div\",\n        { className: `${classPrefix}__inner ${classPrefix}-${position} ${contentClassName}`, style: contentStyle },\n        hasIcon() ? React__default.createElement(\"p\", { className: `${classPrefix}__icon-wrapper` }, iconName()) : null,\n        title ? React__default.createElement(\"div\", { className: `${classPrefix}-title` }, title) : null,\n        React__default.createElement(\"span\", { className: `${classPrefix}-text` }, msg)\n      )\n    )\n  ) : null);\n};\nfunction show(selector, options) {\n  const path = useCustomEventsPath(selector);\n  customEvents.trigger(path, { status: true, options });\n}\nfunction hide(selector) {\n  const path = useCustomEventsPath(selector);\n  customEvents.trigger(path, { status: false });\n}\nToast.defaultProps = defaultProps;\nToast.displayName = \"NutToast\";\nToast.show = show;\nToast.hide = hide;\nexport {\n  Toast as T\n};\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport React__default, { useState, useImperativeHandle } from \"react\";\nimport classNames from \"classnames\";\nimport Taro, { uploadFile, getEnv, chooseMedia, chooseImage } from \"@tarojs/taro\";\nimport { Failure, Link, Del, Loading, Photograph } from \"@nutui/icons-react-taro\";\nimport { B as Button } from \"./button.taro-25f559e1.js\";\nimport { u as useConfig } from \"./configprovider.taro-c5ff4877.js\";\nimport { i as isPromise } from \"./index-e3184f19.js\";\nimport { C as ComponentDefaults } from \"./typings-11d83a22.js\";\nimport { u as usePropsValue } from \"./use-props-value-c78cbf9b.js\";\nimport { Image } from \"@tarojs/components\";\nimport { P as Progress } from \"./progress.taro-421575b9.js\";\nclass UploadOptions {\n  constructor() {\n    __publicField(this, \"url\", \"\");\n    __publicField(this, \"name\", \"file\");\n    __publicField(this, \"fileType\", \"image\");\n    __publicField(this, \"formData\");\n    __publicField(this, \"sourceFile\");\n    __publicField(this, \"method\", \"post\");\n    __publicField(this, \"xhrState\", 200);\n    __publicField(this, \"timeout\", 30 * 1e3);\n    __publicField(this, \"headers\", {});\n    __publicField(this, \"withCredentials\", false);\n    __publicField(this, \"onStart\");\n    __publicField(this, \"taroFilePath\");\n    __publicField(this, \"onProgress\");\n    __publicField(this, \"onSuccess\");\n    __publicField(this, \"onFailure\");\n    __publicField(this, \"beforeXhrUpload\");\n  }\n}\nconst UPLOADING = \"uploading\";\nconst SUCCESS = \"success\";\nconst ERROR = \"error\";\nclass Upload {\n  constructor(options) {\n    __publicField(this, \"options\");\n    this.options = options;\n  }\n  upload() {\n    var _a;\n    const { options } = this;\n    const xhr = new XMLHttpRequest();\n    xhr.timeout = options.timeout;\n    if (xhr.upload) {\n      xhr.upload.addEventListener(\"progress\", (e) => {\n        var _a2;\n        (_a2 = options.onProgress) == null ? void 0 : _a2.call(options, e, options);\n      }, false);\n      xhr.onreadystatechange = () => {\n        var _a2, _b;\n        if (xhr.readyState === 4) {\n          if (xhr.status === options.xhrState) {\n            (_a2 = options.onSuccess) == null ? void 0 : _a2.call(options, xhr.responseText, options);\n          } else {\n            (_b = options.onFailure) == null ? void 0 : _b.call(options, xhr.responseText, options);\n          }\n        }\n      };\n      xhr.withCredentials = options.withCredentials;\n      xhr.open(options.method, options.url, true);\n      for (const [key, value] of Object.entries(options.headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n      (_a = options.onStart) == null ? void 0 : _a.call(options, options);\n      if (options.beforeXhrUpload) {\n        options.beforeXhrUpload(xhr, options);\n      } else {\n        xhr.send(options.formData);\n      }\n    } else {\n      console.warn(\"浏览器不支持 XMLHttpRequest\");\n    }\n  }\n}\nclass UploaderTaro extends Upload {\n  constructor(options) {\n    super(options);\n  }\n  uploadTaro(uploadFile2, env) {\n    var _a;\n    const options = this.options;\n    if (env === \"WEB\") {\n      this.upload();\n    } else if (options.beforeXhrUpload) {\n      options.beforeXhrUpload(uploadFile2, options);\n    } else {\n      const uploadTask = uploadFile2({\n        url: options.url,\n        filePath: options.taroFilePath,\n        fileType: options.fileType,\n        header: {\n          \"Content-Type\": \"multipart/form-data\",\n          ...options.headers\n        },\n        formData: options.formData,\n        name: options.name,\n        success(response) {\n          var _a2, _b;\n          if (options.xhrState === response.statusCode) {\n            (_a2 = options.onSuccess) == null ? void 0 : _a2.call(options, response, options);\n          } else {\n            (_b = options.onFailure) == null ? void 0 : _b.call(options, response, options);\n          }\n        },\n        fail(e) {\n          var _a2;\n          (_a2 = options.onFailure) == null ? void 0 : _a2.call(options, e, options);\n        }\n      });\n      (_a = options.onStart) == null ? void 0 : _a.call(options, options);\n      uploadTask.progress((res) => {\n        var _a2;\n        (_a2 = options.onProgress) == null ? void 0 : _a2.call(options, res, options);\n      });\n    }\n  }\n}\nconst funcInterceptor = (interceptor, { args = [], done, canceled }) => {\n  if (interceptor) {\n    const returnVal = interceptor.apply(null, args);\n    if (isPromise(returnVal)) {\n      returnVal.then((value) => {\n        if (value) {\n          done(value);\n        } else if (canceled) {\n          canceled();\n        }\n      }).catch(() => {\n      });\n    } else if (returnVal) {\n      done();\n    } else if (canceled) {\n      canceled();\n    }\n  } else {\n    done();\n  }\n};\nclass FileItem {\n  constructor() {\n    __publicField(this, \"status\", \"ready\");\n    __publicField(this, \"message\", \"准备中..\");\n    __publicField(this, \"uid\", (/* @__PURE__ */ new Date()).getTime().toString());\n    __publicField(this, \"name\");\n    __publicField(this, \"url\");\n    __publicField(this, \"type\");\n    __publicField(this, \"path\");\n    __publicField(this, \"percentage\", 0);\n    __publicField(this, \"formData\", {});\n    __publicField(this, \"responseText\");\n    __publicField(this, \"loadingIcon\");\n    __publicField(this, \"failIcon\");\n  }\n}\nconst Preview = ({ fileList, previewType, deletable, onDeleteItem, handleItemClick, previewUrl, children }) => {\n  const renderIcon = (item) => {\n    if (item.status === ERROR) {\n      return item.failIcon || React__default.createElement(Failure, { color: \"#fff\" });\n    }\n    return item.loadingIcon || React__default.createElement(Loading, { className: \"nut-icon-loading\", color: \"#fff\" });\n  };\n  return React__default.createElement(React__default.Fragment, null, fileList.length !== 0 && fileList.map((item, index) => {\n    var _a;\n    return React__default.createElement(\n      \"div\",\n      { className: `nut-uploader__preview ${previewType}`, key: item.uid },\n      previewType === \"picture\" && deletable && React__default.createElement(Failure, { color: \"rgba(0,0,0,0.6)\", className: \"close\", onClick: () => onDeleteItem(item, index) }),\n      previewType === \"picture\" && !children && React__default.createElement(\n        \"div\",\n        { className: \"nut-uploader__preview-img\" },\n        item.status === \"ready\" ? React__default.createElement(\n          \"div\",\n          { className: \"nut-uploader__preview__progress\" },\n          React__default.createElement(\"div\", { className: \"nut-uploader__preview__progress__msg\" }, item.message)\n        ) : item.status !== \"success\" && React__default.createElement(\n          \"div\",\n          { className: \"nut-uploader__preview__progress\" },\n          renderIcon(item),\n          React__default.createElement(\"div\", { className: \"nut-uploader__preview__progress__msg\" }, item.message)\n        ),\n        ((_a = item.type) == null ? void 0 : _a.includes(\"image\")) ? React__default.createElement(React__default.Fragment, null, item.url && React__default.createElement(Image, { className: \"nut-uploader__preview-img__c\", style: { objectFit: \"fill\" }, mode: \"aspectFit\", src: item.url, onClick: () => handleItemClick(item) })) : React__default.createElement(React__default.Fragment, null, previewUrl ? React__default.createElement(Image, { className: \"nut-uploader__preview-img__c\", mode: \"aspectFit\", src: previewUrl, onClick: () => handleItemClick(item) }) : React__default.createElement(\n          \"div\",\n          { className: \"nut-uploader__preview-img__file\" },\n          React__default.createElement(\n            \"div\",\n            { onClick: () => handleItemClick(item), className: \"nut-uploader__preview-img__file__name\" },\n            React__default.createElement(Link, { color: \"#808080\" }),\n            React__default.createElement(\n              \"span\",\n              null,\n              \" \",\n              item.name\n            )\n          )\n        )),\n        item.status === \"success\" ? React__default.createElement(\"div\", { className: \"tips\" }, item.name) : null\n      ),\n      previewType === \"list\" && React__default.createElement(\n        \"div\",\n        { className: \"nut-uploader__preview-list\" },\n        React__default.createElement(\n          \"div\",\n          { className: `nut-uploader__preview-img__file__name ${item.status}`, onClick: () => handleItemClick(item) },\n          React__default.createElement(Link, null),\n          React__default.createElement(\n            \"span\",\n            null,\n            \" \",\n            item.name\n          )\n        ),\n        deletable && React__default.createElement(Del, { color: \"#808080\", className: \"nut-uploader__preview-img__file__del\", onClick: () => onDeleteItem(item, index) }),\n        item.status === \"uploading\" && React__default.createElement(Progress, { percent: item.percentage, color: \"linear-gradient(270deg, rgba(18,126,255,1) 0%,rgba(32,147,255,1) 32.815625%,rgba(13,242,204,1) 100%)\", showText: false })\n      )\n    );\n  }));\n};\nconst defaultProps = {\n  ...ComponentDefaults,\n  url: \"\",\n  maxCount: 1,\n  sizeType: [\"original\", \"compressed\"],\n  sourceType: [\"album\", \"camera\"],\n  mediaType: [\"image\", \"video\"],\n  camera: \"back\",\n  uploadIcon: React__default.createElement(Photograph, { size: \"20px\", color: \"#808080\" }),\n  uploadLabel: \"\",\n  previewType: \"picture\",\n  fit: \"cover\",\n  name: \"file\",\n  accept: \"*\",\n  disabled: false,\n  autoUpload: true,\n  multiple: false,\n  maxFileSize: Number.MAX_VALUE,\n  data: {},\n  headers: {},\n  method: \"post\",\n  previewUrl: \"\",\n  xhrState: 200,\n  timeout: 1e3 * 30,\n  preview: true,\n  deletable: true,\n  maxDuration: 10,\n  beforeDelete: (file, files) => {\n    return true;\n  }\n};\nconst InternalUploader = (props, ref) => {\n  const { locale } = useConfig();\n  const { children, uploadIcon, uploadLabel, accept, name, camera, defaultValue, value, previewType, fit, disabled, multiple, url, previewUrl, headers, timeout, method, xhrState, data, preview, deletable, maxCount, maxFileSize, mediaType, className, autoUpload, sizeType, sourceType, maxDuration, onStart, onDelete, onChange, onFileItemClick, onProgress, onSuccess, onUpdate, onFailure, onOversize, beforeXhrUpload, beforeDelete, ...restProps } = { ...defaultProps, ...props };\n  const [fileList, setFileList] = usePropsValue({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange: (v) => {\n      onChange == null ? void 0 : onChange(v);\n    }\n  });\n  const [uploadQueue, setUploadQueue] = useState([]);\n  const classes = classNames(className, \"nut-uploader\");\n  useImperativeHandle(ref, () => ({\n    submit: () => {\n      Promise.all(uploadQueue).then((res) => {\n        res.forEach((i) => i.uploadTaro(uploadFile, getEnv()));\n      });\n    },\n    clear: () => {\n      clearUploadQueue();\n    }\n  }));\n  const clearUploadQueue = (index = -1) => {\n    if (index > -1) {\n      uploadQueue.splice(index, 1);\n      setUploadQueue(uploadQueue);\n    } else {\n      setUploadQueue([]);\n      fileList.splice(0, fileList.length);\n      setFileList([...fileList]);\n    }\n  };\n  const _chooseImage = () => {\n    if (disabled) {\n      return;\n    }\n    if (Taro.getEnv() === \"WEB\") {\n      const el = document.getElementById(\"taroChooseImage\");\n      if (el) {\n        el == null ? void 0 : el.setAttribute(\"accept\", accept);\n      } else {\n        const obj = document.createElement(\"input\");\n        obj.setAttribute(\"type\", \"file\");\n        obj.setAttribute(\"id\", \"taroChooseImage\");\n        obj.setAttribute(\"accept\", accept);\n        obj.setAttribute(\"style\", \"position: fixed; top: -4000px; left: -3000px; z-index: -300;\");\n        document.body.appendChild(obj);\n      }\n    }\n    if (getEnv() === \"WEAPP\" && chooseMedia) {\n      chooseMedia({\n        /** 最多可以选择的文件个数 */\n        count: multiple ? maxCount * 1 - fileList.length : 1,\n        /** 文件类型 */\n        mediaType,\n        /** 图片和视频选择的来源 */\n        sourceType,\n        /** 拍摄视频最长拍摄时间，单位秒。时间范围为 3s 至 30s 之间 */\n        maxDuration,\n        /** 仅对 mediaType 为 image 时有效，是否压缩所选文件 */\n        sizeType: [],\n        /** 仅在 sourceType 为 camera 时生效，使用前置或后置摄像头 */\n        camera,\n        /** 接口调用失败的回调函数 */\n        fail: (res) => {\n          onFailure && onFailure(res);\n        },\n        /** 接口调用成功的回调函数 */\n        success: onChangeMedia\n      });\n    } else {\n      chooseImage({\n        // 选择数量\n        count: multiple ? maxCount * 1 - fileList.length : 1,\n        // 可以指定是原图还是压缩图，默认二者都有\n        sizeType,\n        sourceType,\n        success: onChangeImage,\n        fail: (res) => {\n          onFailure && onFailure(res);\n        }\n      });\n    }\n  };\n  const executeUpload = (fileItem, index) => {\n    const uploadOption = new UploadOptions();\n    uploadOption.name = name;\n    uploadOption.url = url;\n    uploadOption.fileType = fileItem.type;\n    uploadOption.formData = fileItem.formData;\n    uploadOption.timeout = timeout * 1;\n    uploadOption.method = method;\n    uploadOption.xhrState = xhrState;\n    uploadOption.headers = headers;\n    uploadOption.taroFilePath = fileItem.path;\n    uploadOption.beforeXhrUpload = beforeXhrUpload;\n    uploadOption.onStart = (option) => {\n      clearUploadQueue(index);\n      setFileList(fileList.map((item) => {\n        if (item.uid === fileItem.uid) {\n          item.status = \"ready\";\n          item.message = locale.uploader.readyUpload;\n        }\n        return item;\n      }));\n      onStart && onStart(option);\n    };\n    uploadOption.onProgress = (e, option) => {\n      setFileList(fileList.map((item) => {\n        if (item.uid === fileItem.uid) {\n          item.status = UPLOADING;\n          item.message = locale.uploader.uploading;\n          item.percentage = e.progress;\n          onProgress && onProgress({ e, option, percentage: item.percentage });\n        }\n        return item;\n      }));\n    };\n    uploadOption.onSuccess = (responseText, option) => {\n      const list = fileList.map((item) => {\n        if (item.uid === fileItem.uid) {\n          item.status = SUCCESS;\n          item.message = locale.uploader.success;\n          item.responseText = responseText;\n        }\n        return item;\n      });\n      setFileList(list);\n      onSuccess == null ? void 0 : onSuccess({\n        responseText,\n        option,\n        fileList: list\n      });\n    };\n    uploadOption.onFailure = (responseText, option) => {\n      const list = fileList.map((item) => {\n        if (item.uid === fileItem.uid) {\n          item.status = ERROR;\n          item.message = locale.uploader.error;\n          item.responseText = responseText;\n        }\n        return item;\n      });\n      setFileList(list);\n      onFailure == null ? void 0 : onFailure({\n        responseText,\n        option,\n        fileList: list\n      });\n    };\n    const task = new UploaderTaro(uploadOption);\n    if (props.autoUpload) {\n      task.uploadTaro(uploadFile, getEnv());\n    } else {\n      uploadQueue.push(new Promise((resolve, reject) => {\n        resolve(task);\n      }));\n      setUploadQueue(uploadQueue);\n    }\n  };\n  const readFile = (files) => {\n    files.forEach((file, index) => {\n      var _a, _b;\n      let fileType = file.type;\n      const filepath = file.tempFilePath || file.path;\n      const fileItem = new FileItem();\n      if (file.fileType) {\n        fileType = file.fileType;\n      } else {\n        const imgReg = /\\.(png|jpeg|jpg|webp|gif)$/i;\n        if (!fileType && (imgReg.test(filepath) || filepath.includes(\"data:image\"))) {\n          fileType = \"image\";\n        }\n      }\n      fileItem.path = filepath;\n      fileItem.name = filepath;\n      fileItem.status = \"ready\";\n      fileItem.type = fileType;\n      fileItem.uid = `${fileItem.uid}_${index}`;\n      fileItem.message = autoUpload ? locale.uploader.readyUpload : locale.uploader.waitingUpload;\n      if (getEnv() === \"WEB\") {\n        const formData = new FormData();\n        for (const [key, value2] of Object.entries(data)) {\n          formData.append(key, value2);\n        }\n        formData.append(name, file.originalFileObj);\n        fileItem.name = (_a = file.originalFileObj) == null ? void 0 : _a.name;\n        fileItem.type = (_b = file.originalFileObj) == null ? void 0 : _b.type;\n        fileItem.formData = formData;\n      } else {\n        fileItem.formData = data;\n      }\n      if (preview) {\n        fileItem.url = fileType === \"video\" ? file.thumbTempFilePath : filepath;\n      }\n      fileList.push(fileItem);\n      setFileList(fileList);\n      executeUpload(fileItem, index);\n    });\n  };\n  const filterFiles = (files) => {\n    const maximum = props.maxCount * 1;\n    const maximize = props.maxFileSize * 1;\n    const oversizes = new Array();\n    const filterFile = files.filter((file) => {\n      if (file.size > maximize) {\n        oversizes.push(file);\n        return false;\n      }\n      return true;\n    });\n    if (oversizes.length) {\n      onOversize && onOversize(files);\n    }\n    const currentFileLength = filterFile.length + fileList.length;\n    if (currentFileLength > maximum) {\n      filterFile.splice(filterFile.length - (currentFileLength - maximum));\n    }\n    return filterFile;\n  };\n  const deleted = (file, index) => {\n    const deletedFileList = fileList.filter((file2, idx) => idx !== index);\n    onDelete == null ? void 0 : onDelete(file, deletedFileList);\n    setFileList(deletedFileList);\n  };\n  const onDeleteItem = (file, index) => {\n    clearUploadQueue(index);\n    funcInterceptor(beforeDelete, {\n      args: [file, fileList],\n      done: () => deleted(file, index)\n    });\n  };\n  const onChangeMedia = (res) => {\n    const { tempFiles } = res;\n    const _files = filterFiles(tempFiles);\n    readFile(_files);\n  };\n  const onChangeImage = (res) => {\n    const { tempFiles } = res;\n    const _files = filterFiles(tempFiles);\n    readFile(_files);\n  };\n  const handleItemClick = (file) => {\n    onFileItemClick == null ? void 0 : onFileItemClick(file);\n  };\n  return React__default.createElement(\n    \"div\",\n    { className: classes, ...restProps },\n    (children || previewType === \"list\") && React__default.createElement(\n      \"div\",\n      { className: \"nut-uploader__slot\" },\n      React__default.createElement(\n        React__default.Fragment,\n        null,\n        children || React__default.createElement(Button, { size: \"small\", type: \"primary\" }, \"上传文件\"),\n        maxCount > fileList.length && React__default.createElement(Button, { className: \"nut-uploader__input\", onClick: _chooseImage })\n      )\n    ),\n    React__default.createElement(Preview, { ...{\n      fileList,\n      previewType,\n      deletable,\n      onDeleteItem,\n      handleItemClick,\n      previewUrl,\n      children\n    } }),\n    maxCount > fileList.length && previewType === \"picture\" && !children && React__default.createElement(\n      \"div\",\n      { className: `nut-uploader__upload ${previewType} ${disabled ? \"nut-uploader__upload-disabled\" : \"\"}` },\n      React__default.createElement(\n        \"div\",\n        { className: \"nut-uploader__icon\" },\n        uploadIcon,\n        React__default.createElement(\"span\", { className: \"nut-uploader__icon-tip\" }, uploadLabel)\n      ),\n      React__default.createElement(Button, { className: \"nut-uploader__input\", onClick: _chooseImage })\n    )\n  );\n};\nconst Uploader = React__default.forwardRef(InternalUploader);\nUploader.defaultProps = defaultProps;\nUploader.displayName = \"NutUploader\";\nexport {\n  Uploader as U\n};\n","import { Divider} from '@nutui/nutui-react-taro';\nimport \"./index.scss\";\nimport { useEffect, useRef, useState } from 'react';\nimport Taro from '@tarojs/taro';\n\nimport Anchor from '@/components/Anchor';\n\n// 定义每个项的类型\ntype ColumnItem = {\n  label: string;\n  value: string;\n  parent?: string;\n};\n\n// 定义数据的类型\ntype ColumnsData = ColumnItem[];\n\nconst InstallForm = () => {\n\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const headerRef = useRef<HTMLDivElement | null>(null)\n\n  const [containerHeight, setContainerHeight] = useState<number>(0);\n\n  const [tab4value, setTab4value] = useState<string>('0');\n  const list4 = Array.from(new Array(10).keys());\n\n  const coulumns:ColumnsData = [\n    {\n      label: '签约资料',\n      value: 'ContractData',\n      parent: '1',\n    },\n    {\n      label: '贷款资料',\n      value: 'LoanData',\n    },\n   \n    {\n      label: '产品&造价',\n      value: 'ProductCost',\n    },\n    {\n      label: '安装合同',\n      value: 'InstallationContract',\n    },\n    {\n      label: '踏勘资料',\n      value: 'SurveyData',\n    },\n    {\n      label: '房屋信息',\n      value: 'HouseInformation',\n    },\n    {\n      label: '设计资料',\n      value: 'DesignData',\n    },\n    {\n      label: '电气设计',\n      value: 'ElectricalDesign',\n    },\n    {\n      label: '结构设计',\n      value: 'StructuralDesign',\n    },\n    {\n      label: '验收资料',\n      value: 'AcceptanceData',\n    },\n    {\n      label: '设备信息',\n      value: 'EquipmentInformation',\n    },\n    {\n      label: '电气验收',\n      value: 'ElectricalAcceptance',\n    },\n  ];\n  \n\n  useEffect(() => {\n \n    const query = Taro.createSelectorQuery()\n    query.select('#contentId').boundingClientRect()\n    query.exec((res) => {\n      setContainerHeight((1334 - res[0].height)/2)\n    })\n  }, [])\n\n\n  return (\n    <div className='flex flex-col min-h-screen' id=\"wrapId\" ref={containerRef}>\n      <div className=\"bg-[#f5f6f7] px-4 py-4\" ref={headerRef} id=\"headerId\">\n        <div className=\"bg-white rounded-md shadow-white px-4 py-4\">\n          <div className=\"flex items-center justify-between gap-2\">\n            <div className=\"flex-1\">\n              <div className=\"flex justify-between mb-2\">\n                <div className=\"text-md\">LG0000111111</div>\n                <div className=\"flex gap-1 text-xs text-white\">\n                  <div className=\"rounded-full leading-5 h-5 px-2 bg-red-500\">已签收</div>\n                  <div className=\"rounded-full leading-5 h-5 px-2 bg-blue-500\">征信受理</div>\n                </div>\n              </div>\n              <div className=\"flex justify-between text-xs\">\n                <div>张三</div>\n              </div>\n            </div>\n          </div>\n          \n          <Divider className=\"border-slate-50\" style={{\n            borderColor: '#e5e5e5'\n          }} />\n\n          <div className='text-slate-600 text-xs'>\n            <div>地址：云南省丽江市宁蒗县</div>\n            <div>电话：15198912242</div>\n          </div>        \n        </div>\n      </div>\n      \n      <div id='contentId' className='bg-white  flex-1'\n        style={{height: `${containerHeight}px`}}\n      >\n        <Anchor items={coulumns} />\n      </div>\n      \n    </div>\n  )\n};\n\nexport default InstallForm;\n","import Taro from '@tarojs/taro';\nimport  { useState, useEffect, useRef } from 'react';\nimport { throttle, } from 'lodash';\nimport { Sticky } from '@nutui/nutui-react-taro'\nimport ContractData from '../ContractData';\nimport LoanData from '../LoanData'\nimport ProductCost from '../ProductCost'\nimport InstallationContract from '../InstallationContract'\nimport SurveyData from '../SurveyData'\nimport HouseInformation from '../HouseInformation';\nimport ElectricalDesign from '../ElectricalDesign'\nimport { Form } from '@nutui/nutui-react-taro'\nimport './index.scss'\n\nconst componentMap = {\n  ContractData: ContractData,\n  LoanData,\n  ProductCost,\n  InstallationContract,\n  SurveyData,\n  HouseInformation,\n  ElectricalDesign\n};\nconst Anchor = ({ items }) => {\n  const [selectedItem, setSelectedItem] = useState<string>('');\n\n  const scrollContainerRef = useRef(null);\n\n\n  const onPageScroll = (e) => {\n    console.log(e, 989)\n    const elements = items; // 你的元素列表\n    const elementPositions = elements.map((element) => {\n      const query = Taro.createSelectorQuery();\n      query.select(`#item-${element}`).boundingClientRect();\n      return new Promise((resolve) => {\n        query.exec(([res]) => {\n          resolve({\n            element,\n            top: res.top,\n          });\n        });\n      });\n    });\n  \n    Promise.all(elementPositions).then((positions) => {\n      // positions 包含了每个元素的位置信息\n      const currentPosition = e.scrollTop;\n  \n      // 在这里判断当前滚动位置和元素位置的关系，决定哪个元素在视图中\n      positions.forEach(({ element, top }) => {\n        if (top <= currentPosition) {\n          console.log(`${element} is in view`);\n          // 在这里可以触发相关操作，比如更新当前选中元素\n        }\n      });\n    });\n  }\n  \n\n  // 使用lodash的debounce来创建一个点击事件处理函数\n  const handleItemClick = (item: string) => {\n    setSelectedItem(item);\n    console.log(item, 'item--')\n    // 滚动到锚点\n    console.log(Taro.createSelectorQuery()\n    .select(`#item-${item}`), \"#item-\")\n    // 修复代码，让#content-id 滚动到#item-${item} 所在的位置\n    // 修复代码，让#content-id 滚动到#item-${item} 所在的位置\n   // 修复代码，让父元素滚动到子元素的位置\n    Taro.createSelectorQuery()\n    .select(`#item-${item}`)\n    .boundingClientRect()\n    .exec((res) => {\n      if (res[0]) {\n        const targetTop = res[0].top;\n        console.log(res, 'targetTop')\n        // 获取父元素的滚动位置\n        // Taro.pageScrollTo({\n        //   scrollTop:targetTop,\n        //   duration: 300, // 滚动动画持续时间\n        // });\n        Taro.createSelectorQuery()\n          // .in(\"#contentId\")\n          .select('#contentId')\n          .boundingClientRect()\n          .selectViewport() // 选择父元素\n          .scrollOffset() // 获取滚动位置\n          .exec((containerRes) => {\n            console.log(containerRes, 'containerRes')\n            if (containerRes[1]) {\n              const scrollTop = containerRes[1].scrollTop + targetTop;\n              // 使用 Taro.pageScrollTo 滚动到目标位置\n              Taro.pageScrollTo({\n                scrollTop,\n                duration: 300, // 滚动动画持续时间\n              });\n            }\n          });\n      }\n    });\n\n\n  }; // 设置合适的延迟时间\n\n  useEffect(() => {\n  \n  }, []);\n\n  const generateComponts = (item) => {\n    let componentName = item.value\n    const DynamicComponent = componentMap[componentName];\n    if (DynamicComponent) {\n      return (\n        <DynamicComponent title={item.label} />\n      );\n    }\n    return null; // Handle unknown component names\n  }\n\n\n  return (\n    <div className=\"flex h-full py-4 box-border\">\n      <div className=\"w-1/4\">\n        <Sticky threshold={0}>\n          <div className='text-xs text-slate-800  leading-8'>\n            {items.map((item, index) => (\n              <div\n                key={item.value}\n                className={` px-2 text-center ${item.value === selectedItem ? 'bg-blue-500 text-white' : ''}`}\n                onClick={() => handleItemClick(item.value)}\n              >\n                {item.label}\n              </div>\n            ))}\n          </div>\n        </Sticky>\n       \n      </div>\n      <div className=\"w-3/4 bg-[#f5f6f7] box-border  h-full\" id='content-id' ref={scrollContainerRef}>\n        <Form\n          divider\n          labelPosition=\"left\"\n          style={{\n            margin: 0,\n          }}\n        >\n          {items.map((item, index) => (\n            <div key={`content-${index}`} id={`item-${item.value}`} className=\"content-item\">\n              { generateComponts(item) }\n            </div>\n          ))}\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Anchor;\n","import { title } from 'process'\nimport React from 'react'\n\nimport { Divider } from '@nutui/nutui-react-taro';\n\ntype IProps = {\n  title: string\n}\nconst ContractData = (props: IProps) => {\n  let { title } = props\n  return (\n    <div className='bg-white mb-1'>\n      <div className=\"text-sm text-blue-600 leading-8\">{title}</div>\n      <div className=' leading-6'>\n        &nbsp;\n      </div>\n      {/* <Divider style={{\n        borderColor: '#e5e5e5'\n      }} /> */}\n    </div>\n  )\n}\n\nexport default ContractData","import { title } from 'process'\nimport React, { useState } from 'react'\nimport Taro from '@tarojs/taro';\n\nimport { Form, Input, Picker, TextArea, Uploader } from '@nutui/nutui-react-taro'\nimport { Location2, Ask2 } from '@nutui/icons-react-taro';\nimport { useToast } from '@/hooks/useToast';\n\ntype IProps = {\n  title: string\n}\nconst ElectricalDesign = (props: IProps) => {\n  let { title } = props\n  const toast = useToast()\n\n  const [visible, setVisible] = useState(false)\n  const [baseDesc, setBaseDesc] = useState('')\n\n  const [longitude, setLongitude] = useState<string>('')\n  const [latitude, setLatitude] = useState<string>('')\n  const listData1 = [\n    [\n      { value: 1, text: '南京市',},\n      { value: 2, text: '无锡市',},\n      { value: 3, text: '海北藏族自治区',},\n      { value: 4, text: '北京市',},\n      { value: 5, text: '连云港市',},\n      { value: 8, text: '大庆市',},\n      { value: 9, text: '绥化市',},\n      { value: 10,text: '潍坊市',},\n      { value: 12,text: '乌鲁木齐市'},\n    ],\n  ]\n\n  const uploadUrl = 'https://my-json-server.typicode.com/linrufeng/demo/posts'\n\n  const src =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9xu6pwopYBUXYMtzqX-wK9xvK1Tp3TPYcxXsOvxWptQ&s'\n\n  const changePicker = (list: any[], option: any, columnIndex: number) => {\n    console.log(columnIndex, option)\n  }\n  const confirmPicker = (options: [], values: (string | number)[]) => {\n    let description = ''\n    options.forEach((option: any) => {\n      description += option.text\n    })\n    setBaseDesc(description)\n  }\n\n  const getLocation = () => {\n    Taro.getLocation({\n      type: 'wgs84', // 使用 GPS 坐标\n      success: (res) => {\n        const { latitude, longitude } = res;\n        setLatitude(latitude.toString())\n        setLongitude(longitude.toString())\n        console.log(latitude, longitude);\n        // this.setState({ latitude, longitude });\n      },\n      fail: (error) => {\n        console.error('获取经纬度失败', error);\n        toast.showToast({\n          msg: '获取经纬度失败',\n        })\n        // Toast.show()\n      },\n    });\n  }\n  return (\n    <div className=''>\n      <div className=' pt-4 bg-white mb-1'>\n          <div className='flex justify-between items-center text-xs text-slate-400 mb-2 pr-2'>\n            <div>电器设计图</div>\n            <div className='gap-1 items-center flex'>\n              <Ask2 className=' text-red-600'></Ask2>\n              <span>查看示例</span>\n            </div>\n          </div>\n          <Form.Item\n            label=\"逆变器位置\"\n            name=\"username\"\n          >\n            <div className='text-[#808080]' onClick={() => setVisible(!visible)}>选择逆变器位置</div>\n          </Form.Item>\n          <Form.Item\n            label=\"并网箱位置\"\n            name=\"username\"\n          >\n            <div className='text-[#808080]' onClick={() => setVisible(!visible)}>选择并网箱位置</div>\n          </Form.Item>\n        <div className='grid grid-cols-3 gap-2 pr-2 pt-4 pb-2 flex-wrap'>\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"电站布置图\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"电器设计图\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"并网箱系统图\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"防雷接地系统图\"\n          />\n           <Uploader\n            url={uploadUrl}\n            uploadLabel=\"防雷接地做法图\"\n          />\n        </div>\n      </div>\n      \n      <Picker\n        visible={visible}\n        options={listData1}\n        onConfirm={(options, value) => confirmPicker(options, value)}\n        onClose={() => setVisible(false)}\n        onChange={changePicker}\n      />\n    </div>\n  )\n}\n\nexport default ElectricalDesign","import { title } from 'process'\nimport React, { useState } from 'react'\nimport Taro from '@tarojs/taro';\n\nimport { Form, Input, Picker, TextArea, Uploader } from '@nutui/nutui-react-taro'\nimport { Location2, Ask2 } from '@nutui/icons-react-taro';\nimport { useToast } from '@/hooks/useToast';\n\ntype IProps = {\n  title: string\n}\nconst HouseInformation = (props: IProps) => {\n  let { title } = props\n  const toast = useToast()\n\n  const [visible, setVisible] = useState(false)\n  const [baseDesc, setBaseDesc] = useState('')\n\n  const [longitude, setLongitude] = useState<string>('')\n  const [latitude, setLatitude] = useState<string>('')\n  const listData1 = [\n    [\n      { value: 1, text: '南京市',},\n      { value: 2, text: '无锡市',},\n      { value: 3, text: '海北藏族自治区',},\n      { value: 4, text: '北京市',},\n      { value: 5, text: '连云港市',},\n      { value: 8, text: '大庆市',},\n      { value: 9, text: '绥化市',},\n      { value: 10,text: '潍坊市',},\n      { value: 12,text: '乌鲁木齐市'},\n    ],\n  ]\n\n  const uploadUrl = 'https://my-json-server.typicode.com/linrufeng/demo/posts'\n\n  const src =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9xu6pwopYBUXYMtzqX-wK9xvK1Tp3TPYcxXsOvxWptQ&s'\n\n  const changePicker = (list: any[], option: any, columnIndex: number) => {\n    console.log(columnIndex, option)\n  }\n  const confirmPicker = (options: [], values: (string | number)[]) => {\n    let description = ''\n    options.forEach((option: any) => {\n      description += option.text\n    })\n    setBaseDesc(description)\n  }\n\n  const getLocation = () => {\n    Taro.getLocation({\n      type: 'wgs84', // 使用 GPS 坐标\n      success: (res) => {\n        const { latitude, longitude } = res;\n        setLatitude(latitude.toString())\n        setLongitude(longitude.toString())\n        console.log(latitude, longitude);\n        // this.setState({ latitude, longitude });\n      },\n      fail: (error) => {\n        console.error('获取经纬度失败', error);\n        toast.showToast({\n          msg: '获取经纬度失败',\n        })\n        // Toast.show()\n      },\n    });\n  }\n  return (\n    <div className='mb-1'>\n      <div className=' pt-4 bg-white mb-1'>\n        <div className='text-xs text-slate-300'>房屋信息</div>\n          <Form.Item\n            label=\"场景类型\"\n            name=\"username\"\n          >\n            <div className='text-[#808080]' onClick={() => setVisible(!visible)}>选择场景类型</div>\n          </Form.Item>\n          <Form.Item\n            label=\"经纬度\"\n            name=\"username\"\n          >\n            <div className='flex items-center'>\n              <Input value={latitude} placeholder=\"经度\" type=\"text\" />\n              <Input value={longitude} placeholder=\"纬度\" type=\"text\" />\n              <Location2 onClick={getLocation} />\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"场地数量\"\n            name=\"username\"\n          >\n            <div className='flex items-center'>\n              <Input placeholder=\"请输入组件功率\" type=\"text\" />\n              <span className='text-xs text-[12px] text-slate-600'>KW</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"场地个数\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入场地个数\" type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"业主要求\"\n            name=\"username\"\n          >\n            <TextArea showCount rows={6} placeholder='请输入业主要求' maxLength={300} />\n          </Form.Item>\n      </div>\n      <div className='pt-2 bg-white'>\n        <div className='flex justify-between items-center text-xs text-slate-400 mb-2 pr-2'>\n          <div>房屋全景</div>\n          <div className='gap-1 items-center flex'>\n            <Ask2 className=' text-red-600'></Ask2>\n            <span>查看示例</span>\n          </div>\n        </div>\n        <div className='grid grid-cols-2 gap-2 pr-2 pb-2 flex-wrap'>\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"东面\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"西面\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"正面\"\n          />\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"平面草图\"\n          />\n        </div>\n      </div>\n      <Picker\n        visible={visible}\n        options={listData1}\n        onConfirm={(options, value) => confirmPicker(options, value)}\n        onClose={() => setVisible(false)}\n        onChange={changePicker}\n      />\n    </div>\n  )\n}\n\nexport default HouseInformation","import React from 'react'\n\nimport { Form, Input, Image, Uploader } from '@nutui/nutui-react-taro'\n\nconst InstallationContract = () => {\n\n  const uploadUrl = 'https://my-json-server.typicode.com/linrufeng/demo/posts'\n\n  return (\n    <div className=''>\n      <div className='mb-1 bg-white'>\n        <div className='flex gap-2 pr-2 pb-2'>\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"安装合同\"\n            className='flex-1'\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default InstallationContract","import { title } from 'process'\nimport React from 'react'\n\nimport { Form, Input, Image, Uploader } from '@nutui/nutui-react-taro'\nimport { Link } from '@nutui/icons-react-taro';\n\ntype IProps = {\n  title: string\n}\nconst LoanData = (props: IProps) => {\n  let { title } = props\n\n  const uploadUrl = 'https://my-json-server.typicode.com/linrufeng/demo/posts'\n\n  const src =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9xu6pwopYBUXYMtzqX-wK9xvK1Tp3TPYcxXsOvxWptQ&s'\n  return (\n       <div className=''>\n        <div className='mb-1 bg-white'>\n       `   <Form.Item\n            label=\"贷款银行\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入贷款银行\" type=\"text\" />\n          </Form.Item>\n          <Form.Item\n            label=\"贷款年限\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入贷款银行\" type=\"text\" />\n          </Form.Item>\n          <Form.Item\n            label=\"业主姓名\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入姓名\" type=\"text\" />\n          </Form.Item>\n          <Form.Item\n            label=\"业主电话\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入姓名\" type=\"text\" />\n          </Form.Item>\n          <Form.Item\n            label=\"安装地址\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入姓名\" type=\"text\" />\n          </Form.Item>`\n        </div>\n        <div className='mb-1 bg-white'>\n         <Form.Item\n            label=\"身份证号\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入姓名\" type=\"text\" />\n          </Form.Item>`\n          <div className='flex gap-2 pr-2 pb-2'>\n              <Uploader\n                url={uploadUrl}\n                uploadLabel=\"身份证正面\"\n                className='flex-1'\n              />\n              <Uploader\n                url={uploadUrl}\n                uploadLabel=\"身份证反面\"\n                className='flex-1'\n              />\n            </div>\n        </div>\n        <div className='mb-1 bg-white'>\n         <Form.Item\n            label=\"银行卡号\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入银行卡号\" type=\"text\" />\n          </Form.Item>`\n          <div className='flex gap-2 pr-2 pb-2'>\n            <Uploader\n              url={uploadUrl}\n              uploadLabel=\"银行照片\"\n              className='flex-1'\n            />\n          </div>\n          <div className='flex gap-2 pr-2 pb-2'>\n            <Uploader\n              url={uploadUrl}\n              uploadLabel=\"房屋所属表\"\n              className='flex-1'\n              uploadIcon={<Link />}\n            />\n            <Uploader\n              url={uploadUrl}\n              uploadLabel=\"并网申请表\"\n              className='flex-1'\n              uploadIcon={<Link />}\n            />\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default LoanData","import React, { useState } from 'react'\n\nimport { Form, Input, Picker,  Uploader } from '@nutui/nutui-react-taro'\n\nconst ProductCost = () => {\n\n  const uploadUrl = 'https://my-json-server.typicode.com/linrufeng/demo/posts'\n  const [visible, setVisible] = useState(false)\n  const [baseDesc, setBaseDesc] = useState('')\n  const listData1 = [\n    [\n      { value: 1, text: '南京市',},\n      { value: 2, text: '无锡市',},\n      { value: 3, text: '海北藏族自治区',},\n      { value: 4, text: '北京市',},\n      { value: 5, text: '连云港市',},\n      { value: 8, text: '大庆市',},\n      { value: 9, text: '绥化市',},\n      { value: 10,text: '潍坊市',},\n      { value: 12,text: '乌鲁木齐市'},\n    ],\n  ]\n\n  const changePicker = (list: any[], option: any, columnIndex: number) => {\n    console.log(columnIndex, option)\n  }\n  const confirmPicker = (options: [], values: (string | number)[]) => {\n    let description = ''\n    options.forEach((option: any) => {\n      description += option.text\n    })\n    setBaseDesc(description)\n  }\n\n  return (\n    <div className='mb-1'>\n      <div className=' pt-2 bg-white mb-1'>\n        <div className='text-xs text-slate-300'>组件信息</div>\n          <Form.Item\n            label=\"组件型号\"\n            name=\"username\"\n          >\n            <div className='text-[#808080]' onClick={() => setVisible(!visible)}>选择城市</div>\n          \n          </Form.Item>\n          <Form.Item\n            label=\"组件功率\"\n            name=\"username\"\n          >\n            <div className='flex items-center'>\n              <Input placeholder=\"请输入组件功率\" type=\"text\" />\n              <span className='text-xs text-[12px] text-slate-600'>KW</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"组件数量\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入贷款银行\" type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"逆变器功率\"\n            name=\"username\"\n          >\n            <div className='flex items-center'>\n              <Input placeholder=\"请输入逆变器功率\" type=\"text\" />\n              <span className='text-xs text-[12px] text-slate-600'>KW</span>\n            </div>\n          </Form.Item>\n          <Form.Item\n            label=\"逆变器数量\"\n            name=\"username\"\n          >\n            <Input placeholder=\"请输入贷款银行\" type=\"text\" />\n          </Form.Item>\n      </div>\n      <div className='pt-2 bg-white mb-1'>\n        <Form.Item\n          label=\"装机容量\"\n          name=\"username\"\n        >\n          <div className='flex items-center'>\n            <Input placeholder=\"请输入组件功率\" type=\"text\" />\n            <span className='text-xs text-[12px] text-slate-600'>W</span>\n          </div>\n        </Form.Item>\n        <Form.Item\n          label=\"电站总造价\"\n          name=\"username\"\n        >\n          <div className='flex items-center'>\n            <Input placeholder=\"请输入组件功率\" type=\"text\" />\n            <span className='text-xs text-[12px] text-slate-600'>元</span>\n          </div>\n        </Form.Item>\n        <Form.Item\n          label=\"贷款额度\"\n          name=\"username\"\n        >\n          <div className='flex items-center'>\n            <Input placeholder=\"请输入组件功率\" type=\"text\" />\n            <span className='text-xs text-[12px] text-slate-600'>元</span>\n          </div>\n        </Form.Item>\n        <div className='flex gap-2 pr-2 pb-2'>\n          <Uploader\n            url={uploadUrl}\n            uploadLabel=\"首付款凭证\"\n            className='flex-1'\n          />\n        </div>\n      </div>\n      <Picker\n        visible={visible}\n        options={listData1}\n        onConfirm={(options, value) => confirmPicker(options, value)}\n        onClose={() => setVisible(false)}\n        onChange={changePicker}\n      />\n    </div>\n  )\n}\n\nexport default ProductCost","import { title } from 'process'\nimport React from 'react'\n\nimport { Divider } from '@nutui/nutui-react-taro';\n\ntype IProps = {\n  title: string\n}\nconst SurveyData = (props: IProps) => {\n  let { title } = props\n  return (\n    <div className='bg-white mb-1'>\n      <div className=\"text-sm text-blue-600 leading-8\">{title}</div>\n      <div className=' leading-6'>\n        &nbsp;\n      </div>\n      {/* <Divider style={{\n        borderColor: '#e5e5e5'\n      }} /> */}\n    </div>\n  )\n}\n\nexport default SurveyData","import Taro from '@tarojs/taro';\nimport { Toast } from '@nutui/nutui-react-taro';\nimport { useState } from 'react';\n\ninterface ToastOptions {\n  visible?: boolean,\n  msg: string;\n  type?: string,\n  cover?: boolean;\n  duration?: number;\n  icon?: string;\n}\n\nconst defaultOptions = {\n  visible: true,\n  msg: 'toast',\n  type: 'text',\n  cover: false,\n  duration: 2,\n  closeOnOverlayClick: false,\n  icon: '',\n  center: true,\n}\n\nexport const useToast = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [toastOptions, setToastOptions] = useState<ToastOptions>(defaultOptions)\n\n  \n  const showToast = (props: ToastOptions) => {\n    setToastOptions((toastOptions) => ({\n      ...toastOptions,\n      ...props\n    }))\n    return ToastComponent\n  };\n\n  const hideToast = () => {\n    setIsOpen(false);\n  };\n\n  const ToastComponent = <Toast {...toastOptions} onClose={hideToast} />\n\n  return {\n    showToast,\n    hideToast,\n    ToastComponent,\n  };\n};\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/.pnpm/babel-loader@8.2.1_qxiufrq5yurergrmrmsa5fwjoe/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"电站安装\",\"navigationBarBackgroundColor\":\"#fff\",\"backgroundColor\":\"#fff\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/install-form/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}